(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    403106,       7315]
NotebookOptionsPosition[    400092,       7261]
NotebookOutlinePosition[    400426,       7276]
CellTagsIndexPosition[    400383,       7273]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Constants", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"k", " ", "=", " ", 
     RowBox[{"1.380649", " ", "*", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "23"}]}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Boltzmann", " ", "constant"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"H2m", " ", "=", " ", 
     RowBox[{"2", " ", "*", " ", "1.6605", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "27"}]}]}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"N2m", " ", "=", " ", 
     RowBox[{"28", "*", " ", "1.6605", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "27"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"O2m", " ", "=", "  ", 
     RowBox[{"32", "*", " ", "1.6605", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "27"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T0", " ", "=", " ", "73"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T1", " ", "=", " ", "273"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2", " ", "=", " ", "473"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Maxwell", " ", "Distribution", " ", "for", " ", "the", " ", "absolute", 
     " ", "value", " ", "of", " ", "speed"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FMaxwellDistAbs", "[", 
      RowBox[{"m_", ",", " ", "v_", ",", " ", "T_"}], "]"}], " ", "=", 
     "\[IndentingNewLine]", 
     RowBox[{"4", "*", "Pi", "*", 
      RowBox[{"v", "^", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "Pi", "*", "k", "*", "T"}], ")"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"3", "/", "2"}], ")"}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "m"}], "*", 
        RowBox[{
         RowBox[{"v", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "k", "*", "T"}], ")"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Maxwell", " ", "Distribution", " ", "for", " ", "the", " ", "speed", 
      " ", "i"}], "-", 
     RowBox[{"component", " ", "in", " ", "3"}], "-", 
     RowBox[{"dim", " ", "space"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FMaxwellDistSpComp", "[", 
      RowBox[{"m_", ",", " ", "vi_", ",", " ", "T_"}], "]"}], " ", "=", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"m", "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "Pi", "*", "k", "*", "T"}], ")"}]}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "m"}], "*", 
        RowBox[{
         RowBox[{"vi", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "k", "*", "T"}], ")"}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"The", " ", "most", " ", "probable", " ", "speed"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vP", "[", 
      RowBox[{"m_", ",", " ", "T_"}], "]"}], " ", "=", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "*", "k", "*", 
       RowBox[{"T", " ", "/", " ", "m"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"The", " ", "mean", " ", "square", " ", "speed"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vMS", " ", "[", 
      RowBox[{"m_", ",", " ", "T_"}], "]"}], " ", "=", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"3", "*", "k", "*", 
       RowBox[{"T", "/", "m"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.768455839398149*^9, 3.7684558469892473`*^9}, {
   3.768455969701749*^9, 3.76845604662263*^9}, {3.7684560887356567`*^9, 
   3.768456335797903*^9}, {3.768456369096487*^9, 3.768456384681127*^9}, {
   3.768456430208992*^9, 3.768456568979113*^9}, {3.768456614205949*^9, 
   3.768456634613243*^9}, {3.768456680697872*^9, 3.768456784879814*^9}, 
   3.7684568599962387`*^9, {3.768456890177432*^9, 3.768456904179682*^9}, {
   3.768457142915566*^9, 3.768457145430585*^9}, {3.768457604899805*^9, 
   3.768457607336635*^9}, {3.768457706018229*^9, 3.7684577126104393`*^9}, {
   3.768457787558977*^9, 3.768457807635858*^9}, {3.768458053549902*^9, 
   3.768458107820529*^9}, {3.7684581652650347`*^9, 3.768458209229702*^9}, 
   3.7684583028245153`*^9, 3.768458467809415*^9, {3.768458602538685*^9, 
   3.7684586030587606`*^9}, 3.768458991436212*^9, {3.768556258020134*^9, 
   3.7685562768367968`*^9}},ExpressionUUID->"1106008a-c937-4e14-9c18-\
33acc57e2346"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", " ", "For"}], " ", "the", " ", "absolute", " ", "value", 
    " ", "of", " ", 
    RowBox[{"speed", " ", "--"}]}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
  
  RowBox[{"(*", " ", 
   RowBox[{"T", " ", "=", " ", 
    RowBox[{"T0", " ", "=", " ", 
     RowBox[{"73", "K"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FMaxwellDistAbs", "[", 
        RowBox[{"H2m", ",", " ", "v", ",", " ", "T0"}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistAbs", "[", 
        RowBox[{"N2m", ",", " ", "v", ",", " ", "T0"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistAbs", "[", 
        RowBox[{"O2m", ",", " ", "v", ",", " ", "T0"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", "0", ",", " ", "5000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"v", ",", " ", 
        RowBox[{"f", "[", "v", "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"T", " ", "=", " ", 
     RowBox[{"T1", " ", "=", " ", 
      RowBox[{"273", "K"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FMaxwellDistAbs", "[", 
        RowBox[{"H2m", ",", " ", "v", ",", " ", "T1"}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistAbs", "[", 
        RowBox[{"N2m", ",", " ", "v", ",", " ", "T1"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistAbs", "[", 
        RowBox[{"O2m", ",", " ", "v", ",", " ", "T1"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", "0", ",", " ", "5000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"v", ",", " ", 
        RowBox[{"f", "[", "v", "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"T", " ", "=", " ", 
     RowBox[{"T2", " ", "=", " ", 
      RowBox[{"473", "K"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FMaxwellDistAbs", "[", 
        RowBox[{"H2m", ",", " ", "v", ",", " ", "T2"}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistAbs", "[", 
        RowBox[{"N2m", ",", " ", "v", ",", " ", "T2"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistAbs", "[", 
        RowBox[{"O2m", ",", " ", "v", ",", " ", "T2"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", "0", ",", " ", "5000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"v", ",", " ", 
        RowBox[{"f", "[", "v", "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7684567914665413`*^9, 3.768456850223343*^9}, {
  3.768456913413103*^9, 3.7684572264279413`*^9}, {3.768457278411149*^9, 
  3.768457278823263*^9}, {3.768457322509596*^9, 3.7684573229409657`*^9}, {
  3.7684573700326366`*^9, 3.768457456120422*^9}, {3.768457491766807*^9, 
  3.768457492325507*^9}, {3.768457545750993*^9, 3.7684576153376837`*^9}, {
  3.768457718326185*^9, 3.768457745296088*^9}, {3.7684586871550694`*^9, 
  3.76845868805087*^9}},ExpressionUUID->"6706fbca-ca65-4397-b0dd-\
2d7a449c89c2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
LBAuFYIQMLVKDR5H5fFPIoxMCuGDLImH3P44qr+5+enpjULQ53/+RqKAHfXs
TVpO2haCD22zpqDoMbQlXe+R/rQQvo64+f96wIbqbncF5QcUwqyH5D8mPjbk
mvItpiy4EI5ku1262seK/lDTlryJKITHnu897sizos1hwy/jyYUg61Qtu858
GNUw3p6dSSuEnevruQwdLMhZ1X19ObMQIjakFaT8WNAGKYORrKAQBqKH7kX/
ZUbrXosY34tC6EikcU1cOIReVJFpCtcWgqOd+ep7u0PI6SfrZcn6QmiO/sI0
/JsJrRGV7KCpEL4NU9e4kTGhVcHANPPOQjCJkVg5JMWAfnXw/cv4UQiT5DJN
OxN0qPyfDH3hTCHMIWluXm86ZC+rfqxirhC6WY4UN3LToZXU+2eaVwohtm7S
9ooZLVq2rzeb2CkE01K6P49WqVFpbtfd2X+FIPyyevJ7MjWyG/3m8ouiCAYc
E6lzzlOjJTXaSPIDRVDyMMaINpUKLR41auI/UgSGUZNBA1cpUbHW7U4R9iLg
uaEqrMtIie75uA9LcRaBEAu311oTBVqYzVhR4S8CAzOR9moxCjT/apHPUqII
3lxY837ORI5mLQOfZJ0vgtYJ56GbDHvY74c2CQsaRRCn5kgaCNrFdnwvlslp
F0Hfsb+FD2l3MeZs+i8dBkXwxDs//Aj9DqbwPUJh1awIuMq5jKnFtjHVVXs9
zKoILC8kza7WbmHalAbWgdZFMFzpMt95YQszP8EWw3m/CK7RBHbz2P7BgqwS
ltXci+Aj19F399o3sGhHN5pnnkXgPB5bMGyxgaU8vco97FMEvcJHz6zurWPl
2Vxa9wKLIOtVrB07WseGvmfkxcTs61FcCL7ds4qdvFloOlVaBBlsC8phCr8w
SacQpzOVReDUc/zn8PwKpuR3N9Stugi2bnzZts9YwXRzJF4yvioCNuXM9vuM
K5jzjwo2uf+KwDeE9PzQwiLmsxYt5tO5v18qebOi9SIWQuWk2tFTBN8e93QV
TC5gaYJy9jcGiwA7fTLyzOQ81naz/kPA9yLwKJzS/bo9i3U7JU/2TheBPMCW
eMAsNuznscUxVwS1UvyWrqyz2EIOOlW2UgQzY5m0P2R+YmxTb32Hdovg63tR
QfHQaezmrQ+KwuwkCDMMqBwI+47x7Qb/VOQkwbFgPxNRpe/YlxiNeC0eEsQ+
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$18174#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$18174#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
bPVKUky5Tg1cr3VrcfaWFHVxfaoqceI+5KqeIpQKBAmnWBJWc97fB9z9v5o2
9pOCqhyZ52Iba0FvJfywi0gmkDt4/J5VyAOg7/qPbi4D48s6UqKso14HksbG
FIrRobzszFVhbQz18KC7JMJdOY5bh561nf5VPZRZ3zraFVt2gsxv/+W2ZQPk
z1j9cZlP5qjjvbb0tbsBUAvlW7x/fdka+0q33/I3Qs3nmeNUrZ4s+8+TLh1L
bYRu+Z4hGW0ZpvxX/L2SXxvBYHX9YvMBLUNiaR9y0bgJVB2Kkl2kV+g6X/Nx
jLY3wfSjMh1hkeRjWkdOr0lxN0PpSQFyvkgdarcMT7UFnmaoD9WXty9Xp07l
qky9dbIZJCqGtXED8tQT8vxSxwSb4e8Db/EQ65PUdleYfZbFmyFTxHI8e3/7
aODAj6+lSs0gaNszhTqXH61M6PnObtYMr++U8bHhDqhGmX9rjJk3gxeXlLmy
9TbVepFydrxlM9hyfeW+1v2ZSqGtQWHbuhkQrak/iPorqp7l8oAJh2agiihG
TpLfp5rWS/qR6tMMn2W1nAQXrKn2Jwd0NP2aIQdHn84WbkzFd5nsxp5/M5S8
INnvX9Wicgm5ftYjoBmqfv4SfVIpS7VZ5R2sE9oMY1NWZl/WKKlY//1Wf8Ka
oTDIrMOjep/ybN8iZ0tEM8g+vrkk/XeTMvyNfYdQTDNc06Df08x9R1nieovm
bWwzWA6/W3xIfEHZ/33KhhTfDM4cq3MnHIcplyJYq/UTm+GZE3rpd3gXJQ2t
6d5hUjP0FZeu/ifURPk/j2kO5A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$18174#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["v", HoldForm], TraditionalForm], 
       FormBox[
        RowBox[{"f", "(", 
          TagBox["v", HoldForm], ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"FMaxwellDistAbs", "(", 
         RowBox[{"H2m", ",", "v", ",", "T0"}], ")"}], 
       RowBox[{"FMaxwellDistAbs", "(", 
         RowBox[{"N2m", ",", "v", ",", "T0"}], ")"}], 
       RowBox[{"FMaxwellDistAbs", "(", 
         RowBox[{"O2m", ",", "v", ",", "T0"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7684584707674847`*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"f388b7ac-7a4d-4f64-8574-3ab70febcc10"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9D+KO7NW
          "]]}, Annotation[#, "Charting`Private`Tag$18261#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$18261#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVVnc4l98bRlayVyKyyUpWxud93wcpZIdsPlbxpcjMXtl7bx9FZgMZqYwi
spNkz8gss1LRz++fc677eu77Oc/9XM+5zuGxvWPgQEJERNR1vPx/f3QBN/e5
lR1rRt3qF5+24gZpTSAj5hfWz1BEUl3hh97QKW+zjqEEwSdzk3PluehDzVS3
346MkEDCek/i8DHKcXuISC2GDZxuHSLXyprR1BTalKQqLnD6JMc786EDvW/2
iH7TkReM8wyD0w76UWWXThNGXwH4WOgoLeQwgh4GfiFcihGG8v3pvbbiCbQp
6cSqRa4orF5rmOMdn0M9i3kvhlVJAI29TLdY7xc0e5zw6vqMJJiWBPX1CK6i
3rbPbJYdpcBa21SsY30TNVxvJb33XRqSCiocN+O3USnPwfJTvrJwRnGqyMFk
D/12/9uWZIw8JFeMl1DG/0b7aI/S3zIowqXQ1daF3UO0MotGwThXCUocqqU7
uogwhwqxUP8qFP6+IaV59YwU4zlTyEjBDrD6blD5SS85ljxdaq83A/CT1qSQ
m+gkdtuxnnLRUQXe9xURM9bTYNMir83ERFUB36J9UMFOj2l976j2+q4KpK6f
trVvMmAiviN6lL5qkC1wODchwIwtx+xmi8eog/nIo5NUcuyYkc6fNW9tDaDT
6G1TH+PAOhhPIG0MmvBQeDz8biQn9iCPcd4g9xqQ65osnw7nxiwfXzzvW6UD
N+b1njiq82N97gr+7Xd0QePUkPrOVQGMM4/gSMauB/t++9nM2oJYvHV5k86M
HvQ6fahYuSmMOa80Wsw7GkDBzZwvOjNi2IOel2Tk7w2gXHTrDuNJCWy8uvWJ
iOh1+I6ERv6Vv4Cpu3cReX6/Dl2OrS9PjEhigr9HS8h9jWACE4oj2EhjC6d+
bIjGmIDqo6mzyyvymPWN+u8puyYg4W97PrBOAZt64Lnz09IUzKgf7/mHKGKj
Crs/30qZwQAps20oDw7rublFYjFlDkThDSqmQRhW+3aNLf6CNZBPPs0Q1lLF
2l/f4f2xZgumDmdyu39pYiF2g3znue2AnauJX9L3GoaevCBgYWQHX1WUJA9+
XsNeGn4TetNqB3o9E2tpv7Sw+nUX8cR0e5A5K9EqfKiDVZxxlhdEHUF0QuvH
VKQ+luJlr2Oc4gRzVb2PNBKNML/M/H6St07wAn1Xir03wuwbR7Se7jlBfkSS
OAmpMSZ3cPkapYkzmHn7Nyz4GmMTAQLqzVz/gej9kNFe6xsYb8SyMle1CyD0
Dn3c3KbYqVKu9p5pF+DdbOBtNjbF9jqNwYfOFYipepYO4k2xdxRd6NBdVzis
3T+w+2WK/RdXphSmcBtCdGLfPOoxw56n3pJdfncHqH+bPuU2t8AK6gjPU3/d
gVzLgBvn4ywwVeeNnHMsbkD0PfppU7MFJhbHf6bvihvMtfuE2rNZYkd96acF
Kt1g/sePufZ+S+zutOSNP2/cwOWVKMWHA0vs62Zf5odJN2i9rTdgKmCFDdGS
sQbRuENmmbLesJ8V9lDPi/mzmztsM8nbXzpnjbHhGQwfx7jDW8oXuetXrLF4
98dp4Q/cwe+5rjPtbWvMO3WJUXLEHVa04HtuszWmPmLEEHPpLoSvRqbcELTB
Nm7I0Sod3QV9M8z0W4UNJjORnp7O6gELyO/WmiYbLNBil/2bhAeQKsc3CXXZ
YLT4Z0LF1h6gH3WeQWTRBpN0FlGmaPcAX2sz9pDTeMx3I7rLZtwDxoQuPBnk
w2Ptt79qN297wKDYfMHgBTxm4FFi5srrCadIWdpmr+AxzwAuz4/hnhDUFCaF
c8djr44Cfovle8LBzcbqk/54jCx0MiTyuSc4lMioRUbgscz72QkKS57AzhPr
F5+Jx2YofjKlHXqC7sfgfZYiPCYUa5S7weIFndzfNXXK8FhTImNZ0RUvmBhU
dO5twGNEDO7iB1Ze8Fmm7QJ9Cx7TSBusM/A55s+QdZ3oxGMTWfFtZOVe8PbV
XszPD3iMj/24q21eUPnh7MDPz3jMJV+jv2nMCzLO/WAum8ZjhwTyif9OegOD
nDcJ0woeu8LnYNPJ4w1JxKXTgxt4LLH07TKXojd8Workx23jsc9CvK6+Bt6w
OL92cGMfj3FXhux+cPYGMe/DcL4DPHZLbPaeaLg3/CJV3ij8i8dqniBE9/O8
4SZ1pHXPPzz2WzI/cqbOG3YUF2kekdhiKnW/qeX7vOGS9WMRKTJbLFbWNC3l
izfMSt/ZuE1hi31sbDyz/tcbblPOx1uctMXOKrISLrP4wPjVOfU/VLaY/StP
wUJxH2iedrS5Rm2LVaMfq3+q+cCsXxirNo0ttt92UVrfygdwzddqiGhtMVQ1
+UWltw9MC07fczzGkZ3fMNIkH1jk03wVdIwHrmq/syzzAY3GjC6NY3y6p0qr
sdUHDOQrNruO89loUX2kH/OBwAXN8IPj88oHbpk6b/nAlDbz3MwpW2xLr2v2
LaUvPOi/ZeV7XJ/CRwFHTh5feFv/n/k7SlsszChiw1vBFzKif8i9J7fFej4v
3B3S94ULNEnXQ0ltMUYz5YPzzr4QqGvJ+p3YFjOfKgoOD/OFkVier4zH/Sux
OiKbzvWF9X/nJTf/4LGNOYt4uTpfON2obhX0C4/J2L1kTO71hcwL7+fe7eGx
wKUzOauLvjDw1+F81xYeo10bLc1nvgcQ0ju79RWPlV8pCSO/cA+ebB+wPV3A
YyoP3a3dNO7BTHl0OvvxfHhbUJ+5HHQPErtnRv8M4TH6F+P7j7PvwSNFsa93
e/BYJUvZ8Om6e/D+fmdfztvjeR5Qjl//esynuN1z8Pz4PonSORmR+EEbX4GK
zGM8xhg9pdZ61g/i1+X0eEqP503Z51+qvh98+5hPyZqOxx7XVd9VfOkHGnGm
oUG3j+P0froln/xg4kemgK09HptzuSpGu+UHX4zTjI9M8Riz4MLSPL8//Oki
jbC7jMcCsk+bxiT6w87Qu4CfLHhMKzAMG8MHgPhuCvG/ahtseVz3rEpAAHS5
iHr0F9pgIXKcB1WZATAoyNGNT7bBnn9vrA3uDQCfiyyE2bs2GIftpoCQbCCk
T974rC5rg61dMaH2pgwCQ8o2PRm8NRZDLzHO9DQYtlTo67npLLGmyq+ezV3B
4DckfsdozQJbuVxMj58LBuGHHyludFpgD3FU/J8pQ6DjTl72Oz8LjNg90Jxf
MQQoNI11ghfNsZZxu56W/BBgG/agS3tshslXSZbv4kNh83mTTpe4CSam02Nn
uREG3bF5PrO81zGX6JmppoMwuMDyapbzlwFW/WbHiJkiHJrjrrX69htg4pc4
1Ht5wqFa+MqJaF8DTILbRUzhRjhY3mrzEx7Sxy7u0OwzvwkHmglmB+VIPUwu
Uz+yLysCDIU76scFtTDvIYd/QqUR0MzA49szeQ1roPLzDa+NgD6vIjWBlGvY
peAHzor9EXCHzGPt7KEmJn9rV6ec5D7cEHjzQ3xCA1NUzDgd4XofzPH3b8RW
XMWwmbFyJdVIoOtLeKlcrIo56+t0muhFgvF3UrsFB1UsvePtvJdlJJy6n9dz
IKKKrVQ+YX/mEwn77sJoQoMKluoTEc9fHQlX2OY01T8qY1/oJd1oWKIgat+O
9hQfYLQRpfEivFEgLCTSdnEGw+R/sldcvRAF6RdSAhR8MCxhmmwhVCMKgoLJ
S09Vo5hc5eT1H4FRoDE/VPWYG8GiVaMuzS5HQah/FOtNWUWstuHv9b+7UaC7
Sr51Yur4/3H+rtsZ4mhgpgwgDQ9XwC7SW1Zc54gG4rJ8X/5P8tjElBRHt+4x
rmQLmQy7hIl7zxw9a4qGNaJTfzAKWcxk9TrHQGc0PGqMwJJeymBhFu8vrQ9H
w5sncm+euclgoyrP3QQ2o2FWdGvBYVoaC6GLXcjhiYFK+7qbPm1S2HC57Luw
2BgYd8KZ8FVLYl2KPCotmTGwfWZtEOcuib3qo245eBADNUoxm3/kJLFHW4v1
bi9jYERWO6Y/+gLmJ59aarURAyZUUe6EfnGMp/tbhKJOLDzleP17O0UEYzWb
IPI2i4Vqtgr9oQsiGNVGZ0CNYyy0S8vLjw6cx/boCjyFg2NB/5N+gi79eaz7
xjV71mex8CS+irOJIIS5fS1T3WGIA/N54kHLfX7M4V5aqzhXHOzp7eUWl/Bj
ZqeClZxE4mDFtl5uxZAfu3zBWHpOJQ48eXwbPJv4MDYfUr4BjzigefPpp2Yc
L9ZGjiep/BQHXNPsztuW3Fh9tlbQ0nwcVPBzr+uf5cYqReR/c3871m8ZmPM2
nsPSdeh2ssjjYV1awuzKCy7sVubr+fuX4uEumkr57MNZjE6QvR2fEw+nqHTE
1XXPYGICyK3SR/EQIBwwSzHNhmny29Ct1sWDqyjLYJgLGxbJ+8jSbSAejD1t
MjKST2N/uaR+B51IAO4g857CDRaMncuo+A19AjRoP0bKo1gweU5fdXKuBOBJ
xXgu87NgHhwtmQnyCfA5NNnjnC0ztnZaUzrfNQFmZdP7J78zYpSnXSdm/RLA
OV+ZbiuTERNgTQ7li06AF8z3uNwwRsyGeXSw8kECGEiVERenM2Cf6W1dXnxO
AMJnY1c1XXqs46Rf6ahyIvxw5LNwOkGNLVAWaLHrJgJ79LbbiN8p7B9F266l
RSLccol5FLtHhSmSk6sseScCMuT8t/HbSayGJHVmtyoR+jRnblw6pMAGiOvv
X3qRCNrlRd84IimwDaIxMf93ibDgs/acmoECE/7H6U8ynwiMOTu9e2LkWOGf
itMMrElQWM2sxRBAir363ddiyJcEbV5kR9HMpNj4wXeHbMkk+KbR8WH4yQmM
+Zfs83PXkqBDe/1q+woJFrfXricRkgQnriaEaLkTY76b4zHX1pLg1RvvmqXC
Q9TmlEfy4x9JQD200SxAe4iWMEf2RhEng5BFdcB88F80Xurc8CpNMhShrX2P
nP+glrf1Zx8LJkOiwi8yJ4sD1OCwYGFG7Bhfee0TOfMLvRK/tkQnnQyOy4sl
n21/oRKV4RvuWDI85FAV2XX/iR4t1R/ImiSDJ+uwkWDFPrrjSXLoaJUMucSz
Vr+U9tHlE7pE2fbJ8OHC3aevhvbQAZ4V8t9uyTDIZH7t8N8uWmTJztwSc1zf
ePzbOM8dFD4FSVx5mQwhT6Xkxa2/ozL2vRd92pPh26c/JCqvvqHCu6dly7uS
oXxx69D07DeUnqFGiWokGV7REtnhlzbQea1F9YGNZHh/3sbKN2cNHZ28oPVv
Jxma1NTXdWnW0B7nAF3Jg2SYbvSq6wlfRWujWYxTyVLgRcZ96kDfFTSs46qd
MVcKKKlOXnwYvIx6X093jOJPAXEz3l48xTLqvDDn1CSSArOC7j2uKUvodSI/
N/ZLKaCW3b+sVv0F5cdVB87opkA6aTPV8p8FtLOOPtsxNAXERMNjqvZnUYlZ
GlffqBRwSKjxcdOYRbOpTqnEJqRAG9kFmgTCDOqMJ9t4nJMC52mlqlNMplFa
ut/Yfk0KGI+qJ8l8m0B9FH8yUzSlAMmzrzvc5hPonMPeKltLCmQvOz7a7RlH
6159S8P1pMDN5EdGp+vGUBPnxa/hCynQO+wQsfNwFG3PmHuVsZICqMEIoVJw
FBVpn04p+5YCC2MKy1+qPqF/T48p9f5OAW7qiMCa1yNocWdfEiNT6vF79ILK
7XAYXeNuuFSsmgqdZrHJgd2D6HWtOuo6jVRw9Zc8S808iL7yeTbfoZsKJlI5
rdftBtDEgcq4FfNUaMtQHnxH3Y9KBxTNXvBMBT2vEDaTmB40vyz/ubJfKuSc
far6fus9Sv4xJ+Z6SCo846ZidDF/j46dT5f2iU+FKeGropSK3WjA5+iolpJU
iKhTodtjf4cukURaDFWmgtr7WSHN3E5URyL84sKzVDjkLXtrfrYT5b4fOEn2
OhViq3kv+At3oJ1Sdy9of0qFqwVMuUrWb1AJqzuk1pOpkPvsv4m/O+1odozL
uNt8KiSZG39jjGlHneccw9M3UyFoAHOhfdWG0iaaf54kS4OjCp5XlL4tKLXb
Xrs7dRq48Hf9Y6l7jZ40SKimYEqDHTHv5b6dVygpa2uoNHcafJfqfzEY/BL9
XcArFqeYBrv3H6Tf7m9CfwW/ZOVRPtajSYZUok3oPt6QuPFqGgTJ04zGxzei
WwKRowuGaaDytb9q06wBXX68GqJ4Jw0wIzrhPt7n6JeksP+GvNKAzDoWp15Q
h867cxg7BqTB55Ne9mQcdeiUrLZoakwa5Bq8WP55rhYdfv3s0+rDNBg+JfGp
U/sZOlSk0RZcmQabnleritqeov2hC5UsNWmQ9er8Wc71J2i3GnOIcksa8CvM
3P2k+xht6fcRyRlLg3fyOt0rhpXoq6f0LBdm02Bbfk55q7gCfZFS8a9jKQ3i
+jolPXfL0edGkyNbO2kQOTWfHPmwDK2cRoPVadLhmRvNOqVsKVre+tlphikd
6F2t7vI9LEFLi90MPdnTQUCMjmGXuQQlODw4TxBKBy+Z+akbJx6imZtkIz+V
0yG3K7RxhrIYTR8sbElQT4dOpqbbaqkENKXmUgWfbjoQPnmyNnMR0HgvpyBd
i3QwGi/SJg0tRMMO+4TLvNOBI7umR/xaHhoy68CEBKaD6R1Vs6+xuWhg+9Hh
cHg65DtXepYO5qC+9yU/HiWnQ8yn22dqb2ajrjTpgcZV6VC9ob/fNZCBDh19
zfKvSQcVlluDBCQDldpSqiU0pkPLOjk13bN09Nfw4vLa23SgXqhZNy5KQyOy
pfWCp9JBLUlc0qI0Bf0aE+VcspAOtm/Dn5dIpKCa/pMR71fSoX3pTcyX5mSU
zir8BdN+OmjHLrGSNyWhuXwfectpMoC64fBaS2A8esgshPQzZcDXmCAh8ldx
qA25/42dMxkQWsNUL/0vFhVY5Y3HCWZAyXzVRndaDPrsyd39ITQDpuhE7rXu
RKJMhHd0Py5nwK8M+mYmo0jUO4VdhONaBkRs/3fV7eV9FOf5xsrhRgaMiEyT
z6ZFoF0KjN0HdzKAXfkj8sctDBURdVzg8s6AOjnY3N8KRePPNv9VDciA6+au
/4FnKGrwD38xMToDNNhPqd6NCEFnOmpyeYszoFC0lUQ1NRBVbiCrv1qWAZ71
bg9m3gSgJWWmgy6PM8DmYpzK11/+qFMsMWnjiwxIJWeIavD0Q/d09V2vDR/H
qTz5m8t80BvKpVFuYxkQzDu3w0/kgzZLHRRnzGTAzbigx0cW3mgwS/Ho7FoG
QBBpegKfF0o1uYV5nsiEi+Uyzfzzd1HXvstmOSczoUqTOpPG7C469Drbs4Uu
E8qY1G+mjbqjmQSooDybCWvjS/+xTbihPI7JjAUymUBiY9gqyXAbZaMNUbmi
lAlztx1Obgu4ovQNd+5+V84EJ/3me+nKLugRme6wsm4mLKs8S2mPd0b3H6Mk
60aZcKNNYGDjpRO6YSQhlW6RCZ4nIjTR7VvoRClN6rJTJlyT/S+txPUm+kH7
sD3JLRNkZYUS7J87ot37G9vyPpnAkZvKWEzkiDaq9enHRRzr2diUdsrt0fSl
WAbJokzgfqrCOydji8Yl+CmPl2bC6z/mn28+xKNhss7uYdWZ4P1ol/MaKx51
u6/xYeRFJvS97HxSSmmD3hRXIA5qywRO78LIVjpr1OqT8EWhrkx4stK9tM9i
hWoLUKbcG8kEm3PNOu/kLdDL/T/beCcz4cUJ6sYdQ3MU5/V1q3c+E/LfOx+R
+ZqhIp3v9Li+Z8KD2npS1mETlNzhPv3bk1mg6mwdmjtkhB5Se4ELfRZonLwu
UMtlhO49t3djOZ0FM2XEX3B3DdEF0stDN/mzQPeWqNHJ89fR8WppIgbRLBg2
7qr4G2eADhnySTZfzILBTH2dd7v6aGsJSTI1lgXjHrrx1z7ooQ1aO631almA
ji1eaL+ihz7Zm/9upZUFZJSUhiShumj+5XbdGtMsUPpHHP86RBv1/RJMZ+yZ
BXHDhbZ3pzTQO/F3sH9+WRDY69h0hUwDdZSxvlMemgVDCqlOn2XUUaMIdPB3
Yhbs8tvZ2JRdQbXEJP49zMiC1RqPpP1VNfTyCOcF7fwscNZNHguRUkOl+A8T
iyqyIClCqe/NiCp6vm+jRf1ZFhRSG1zlkVBFuT2nvm03ZEFPm/Z/nfEqKG3H
S53LHcf9urb3U8lUGV2386NdnckCPu3MAmsjFDUpZ6f3WMoCDz37Jw9MELRj
o5nhcP3YX9A1mU92ODTf6w8zw0EWiNYEm7CkKKKUzXmsef+yAB/P+uxxrQLq
eaTEJkCeDRWLpJ81J+VRragADgWmbMC/7ZV+CZfQpt6znG/PZMNMsgePYKAc
yk//mkubOxuSa/jkO1tl0cPsQx68eDZQmb9NmzWWQZ9UBgnHXM2GB0e2w0ld
F1H271wiTDrZYCZfcSdf8iIaKd0qWmCYDd0NDdLBhZKo1at/EjX4bJCEMWVr
+gtoDxFBUulWNvy3l5d5i0IClVMDqc7b2SDg+5XzN7k4SjcQIjvunw0ThmP7
5VyiaAAjzyW7sGzg7ZD7fFlOBF0xbpffjM4G9nfz3x2MzqNts8Q44sxs6FSQ
S9OoEELdtsNUzj/LhsUjm9eexfzH7yPf5bqGbCAn7cad+s6Hqvu9VUNeZ4Ni
YLW1twofyn2CVEO/Jxtkx6fX6H7zoPFXSzQnh7LBycku/IslD/or7rKWw+dj
P8/FTk2840Y/MN/XvfclG4osRlrIdM+hqKmA/on1bDjakEzoR7jQyoJOg4Tt
bNC6dxicI8uJhgmSGxcfZYN9XJE4O8aBSslHWbxnywHsp6QmVnsaLQwQsrp+
LgfuPQ68kj3PilK1d1lPC+TAlYQ7+19Os6KLGpR221I5oJjccck7mxnVSyy3
91fIAe+H5cnaC0zoq2F1RzLIARfSfmpUiglNN49xOqOdA7fTYzgfLDKgRITz
/z28ngO2lcNO9ZcZUJcv713EzXLgsZjkRZ4qevSyK5Wb8s0cuLh049ZDWjp0
PyjO2yk0Bz6K9VhzblOh74aXy8KicoAx4pJNJR0Vmi2oMp6XkAMbcSPrFrIn
UcWBX0oDOTnwtTThpGEGBUrNa+j6tSgHiH6t2YsPkqPTXk8LiR7lgEGw+Tsj
OnI0hNORWLr22P9HVcmBYlLUwL1dSqvpuL43F4Vbd0+gfJ1n7R1ackB/Zec7
XDuBvnP5+C6rJwdyMsb2r1KRoNSvIP7vQg5oKR8wdkb9Q2bo8l+zrOZAf0PW
QYH/EfLU7uc3ie/H/PP+E2d9DxGDU0/08X9yIOhctvDvmD8Iv/XJcD/iXPjm
dBg9Uvgb2a+1f55GkQvVNYQqrZcHSLYZx+l3TLnw0eqzHx/VL8T5ibf67Jlc
MOQ0M6fB/USUSIbv/TqXC7oCI5pVnj+QmYroKRGxXKANJH0pdrCH8B/sFydd
zgWBRF3ydo0d5IeW/sdyzVwQnv5j3Vy1jXQRqknf6OUCg/dq/QLjNuKsbndz
zyIXSpsYey/OfUdw+S3ZNHa5QHNiwKO69xtCs3WmR9ApF8oGOcZV2jaRZ1lD
YqZeucCjNKyf93YdCVsXtbrrnws26Rd1Bj+sIdexqKS40FzoWStpIFlZRX4s
IzuvE3IhIilTyE50BcHJVTXyPsoFHG1VnQnFEkIbS76qVJ0LiwaLYl06X5DZ
aTy7UW0uwNMvdyzzF5Gw+2yBUS25YC9q/0NOYwExHPd4Qug4Pq/D7y9b+Twi
ID44+6LnmC+gqmBDPY90j9xX2RjNBdmgI9ux7lkkV3jeg2w6F2IO8Y8bns4g
/wXgSrkWc4Gve2+OkjCN0PLvUuh/z4U6l+X4wbxJxNDDpr+eIg/s7xhemfz5
GWkOvMF8nTYPfFnN3gXRf0a4o3XMt5jzoLfn9jjh4iiyno9bFeHNg26aFXHx
+BFEr0xasls4DxKwB2qknR+RhhoRH4cLeRCdxuomTfYRCXvHRkbA5cGe/sPZ
xNwPyMoQnRaimge/bAlmSt+HEJ1J8rQJjTzo0n8oBppDCPvWHjfLjTy4l/H5
6BP/AFJz5gMu1j0P3pPPbLzoeY+w8neHC/nmAb7/P76K/m4kQKK1pyMoD/IW
iSypJ7oQddXHJv/i8mBDf1BnmOYd8kS7pCg/NQ9qD8kdEmU6EWaTvGWFnDzY
ruQlc7frQOZcYjw9H+VBH/UKWcDYG+SKT8hLhsd5IK6RxMnM9QapDvUheVp3
HJfJP6pxbkd8Mh2SV9vyIPa3ztTB6TaEtk252moyD+hpjSWFfV8inj3yu3/m
88BoxVj0imMzMjFyQTFnJQ8SnVR2eq1eII9WObs/7ucBRXGcabRrI0K9x0zn
/jcP/EUHXUnDG5C7R6eMaU/kg0bP2M+7xfUIwvR7UZ0+H0bMWARGf9YhDzi3
RZZZ82GYbqj+/IU6hFJ4xT2cMx+Y2Czw4rdrkRHc6L/XIvnQ0CC7x0NSg7g4
1nJIq+VD+QeDT8/3qpFhtwrboWv5MFAr/NR5sAqR9ydUuBrkQ7FdxkfP+krk
RHLipXLrfFCTFNX5VFyO3Mq9H6TmmA9/p4YFLMvKkIGSgM4Fl3woimg+kd/w
CMl94Xyd0y8foka7pXq2ShCiDnxuc0g+UKgNN1FwlCCOAybzN6LyweK/abds
7YeI1OKVO6np+bDv/uT93Z5i5D01XxzF03w45/3syaBsIZIu+IlYpj4fEHOn
BxZMBYgNRPnavMwHQuvz2ZQ/ecgPj3WHF1354B2qzHp3LQdpTyiYWuo/9k/e
M2+3lY3El+leZxzJh46iJHzcvyyEd7IO/pvLh82OI4KofCayuefQmLV8zNf0
aDuBz0CaaNkkOjby4V8sA89QSjqiqxLAwXlw3C8qJzdeqjQkoOLyjwGGAqhu
FHFR0UlGrr794fLndAGc+uBIGWiVhDBOly8KcRXAmebmFG2xRKScnuZDiEgB
/OWuLnmzGod4iLRefSxZAHuyReqZY7EIetm9ZVyuAO6ETMoRPsQgn3w+VUmp
FoCV13Dt1FwUQkiJ4rXWKAAhI7kgsx+RiEuVQk6cbgFIaouOlDBHIiSzBZFf
zAugmwj/44ZzBCJxxRGf6VkAqfS0hkvuociBNdvYG78CKOj5+8qqMwTpuNej
8z2kAMTZ/QMsz4UgZo8lcOoJBYBTN7fa7A1EBLrmaj3TCiDfc+mLfEkAsjWX
er44pwAuO+RRvYryR6KYf7L+Li0AppdGxm9v30MMJCoSBKsLAMshPhnk7otw
qZuTXq8tACJiBsnpQB/kuX/rdlVLAcgzCk6crfVC5hai+iw/F8BmJvoSH3wX
qfqroBo7XQA5fTf1vna6I96sGy8aFgugU0mvOobJHaHR1Cuj2yoAqvVhJ7HI
O8iYHQkX7kcBRBX/SThSv42UBD5Pv/W3AG6+fuZPxuaKKNawhbVTFgKZ6Y+m
2TFnhKy359cmbSGslp5+OvLeCRn6EnCHnaUQmr5fuK3ceQtxZJu38OAphCLH
aPHtcUckLbjikoBiIdzolEr3d7NDdnR/vv0EhdDrxVHwMtcWMeBW04u8Wgi+
OQ2Kv/vxCEP73K2vhoWQ92pg4o+2DeKWIrGfZV4IhU/8+c7IWCND+IBQddtC
aPzr+cN10hJJImHLrbhTCGvPurdljMyRb8MOgmbex/m2qcp9Bc0QnYd1tVSB
hTBeMGCVSmqK0FzW7f0vthBmW0jWRJeMkbj7kX/FSwvB/fm5UUuR68ia0Uj0
TFUh6L9Yc0w0NEA0BXlZkmoLIVr2j+p8lD5ysuu1+FZrIUh41tQ6U+oht7JO
NRPeFYLsiQbSjxU6SPdN0yv6/YWgpuWdLmugjURR7lvVThTCJnWsa+6AJrI8
prJuO18IJAHf5hyKNZArFck+TCuF8C0aRy8cqo6QaYole+4fx32dPzs6XEHs
2f3OCvwthLTxz01Tt9SQjrWu8k8kRWB9pd9TyecyEh5n1y5HXwSyJq1ls7Uq
yIJ5jfZX1iJg/WmJuzqrjKiI/RvP4iyCsfDE8ElmZYS4P3fnl0gR2HnIex1J
Y4hNwUpQxcUicDu52PPoA4K0ucqdMpMvgpiO0u7mIBwSTDvM91KtCGx/2DnF
kSoiMzPnnv2nVQSFo9PC1FPyCPrUFXf2ehFMvW9RCGm7hBzqnjQKtCmCtf2c
HPonsogF94158ZtFoNdyvpq3QQZ5tVXiOuNaBCH14pxM76UR/xSIxPyLwHI0
dbWeRgqZwCcyboUWwZuJgZPR6EVEUWqqkBBdBNkHgZU+vpLIwbBPI3FmETx8
vy2iQi2BmDzsVK3NLwJ+R3EdXK0Y0uTBNGT78Nh/WsJs4E1RxIf56crbZ0Vg
sDl1RuFQGBn98tfTs7EIGMZ+6XpNCSFy9ZrEAi1FsKCmcS+wWxDZN1o+E9lb
BAq9J7CWDn7EUFDmkdxwEThFZdBsfORDnv8Ilfo6VgSuf4TrBzd5EY8szmvq
y0VwdHXz8izGg6iTnq0Y3yiCbpOKrtd+3MhZd3aK/3aLQNXeSTI04BxiVxo3
f4WIALUOS5e8Xp5FBiZjk5NOEGBshav/yJ0DkWeMxcbICdDzaKae/BI7Qh0c
XeBEQwBTI6nW02unEe/6KK1aegIs/uov2RtlRebWI//8ZiLAvILz5I9BFqTe
5L5pPDsBns8kKhh/YUK4kyIoP3ESgKz4xreGI0YktjO8kZOHAFkp/lmqfIyI
lVQYy1MhAhidX+znjqFHum+FdvwUIcApoWBPxTQ6RKooxAMkjvNfDlpREKBF
KKiDP3yQIcDbsDoei3unkLsqQSHs8gQoyesuYVekQqZ8Ay/YKRFAfIIhnfXk
SeTZkn/CnjIBrnJScOoOkiPsZ/1xiBoBziz9127TSYZEGPit31cngGLUP2PT
LlLEtNVX47QuAUgv/03a3CBBOvZ9flkbECDvVlpQIh0JIiHmU1ZuRIDBwAI/
bhwxQpLjRaZoQQBp2wWWRtt/OJdBz+dh1gQI2rtM5bBziBsl87TrtSWAk/n2
QlXqX1zV3bvtFk4EYLr9VvcsyW9cyKzbuW93CECRPkARXfUTZ6h1JzDYmwAT
wg5xyzH7OOEXrpP0gQSwOxi8UJC9izsUcFF4EE4AHtKiLa+P27jhVOcs6VgC
uFf4EmfJbeEe/bu135FMAI75A54fAZs4P5eb142zCOBDRms5MriG0x13qPla
QAAZqltxy9YrOP4r9nT3Sghw8j+lq31Cy7hftbauVFUEsHlouJ/H+wXXdw7f
m1dDgOXUm/Vj1xZwxfHW58WbCBC7JiHsVDSH8z6wjGppOZ4fpT+7nNIzOE1H
iyXdTgJwJUartrhO4lqsBolSPhDAtVOAjHt1FHfxhsrZ4WkCjDjq2ppxf8SV
6NZfYlojwFN28rOv1wZxbOrC1w1/HOtJ+ovrCnpw8ZB3O4OkGE7oCN7flXiH
I1KgjR2lLYZpJFoi1+8NjvPn2tAyQzH0QuXHw0ftOMX6rtM/mYuhO2+FpW6q
Ded5MbT0NEcxCCWu7+10tOC+nt9rMxEqhofF+umOuS9wpCtDFE4ix3rG2Zsh
Hk047kePde6JFwOHZXpfpWkjzoz35lSOdDFYiYk5bGnW4wbYJ35OYMWQ19J3
0FVbg2s41SZhaVIMofJTD1DnctzH9/lerubF0LTr8LJLuwy3FXXvVaBVMfhc
5kxnQB/hREilNQvti8FXcDH8sUoJruBvqcOsWzGsaKoPtPYTcBGbcfn4mGKQ
eEclFcqchVuPlPtWF18M2v6ZThe/ZeAMuOcx8uRi8PSLIjccTcdxX5dbrMws
Bpsgrs/ig6m4V01z5/ceFgMTneRZvYeJuP1w2cbIlmLo/CLSEq8egXNkn/1Q
tVsMc+6D66sl7jiNq1IUPywfQPj4a4l7Sxq4FwmKTm78DyFWpNyBXe+f0ntb
Y2Kyrw/B9idrpnFmjZI91arW2eYS+GDlJ7QVYKpUUTiddCa4FDr8rk/RZpIq
3SPTiMwxfARr6/Xb8bMliqu/u2qlBcsAK1XoWfNVVTwxXT5at1oGH569WXbc
/aJQkUL0pOF1OVDrOxltmvkrHEg1BxSFV8AfjtsDDPvMCqu2UaEP1CohzHHO
3CHziby9Q6+CMFsVnAw48h6XUZSPMXRfTZuqApfdaxnBir2XFFgTtcJqqoGe
Q+ct73m9S+kd1GXGvo8hdWn5E2vVZ7kk4qJLakpP4AkTqfbTZhs5FoZy/wba
p5BO3tgcyzshq0bD1Egz8hT6xl0bmsjNZIlu/x7eNXwGEuptscEzvTJPznot
bb5+BsT3NiT+huFkatoJuxPnaoBLrbfpSKFO+vdglPnJ2BqYorh7Um2XXTp7
5FyryGYNyJpJP2E2jJGKJLQjpjq1MPlYkIk++ufF5k9crO8ba2FnuN+T5o/R
RVVi8TVR9jpAr1mOELu/knRMcFJc5KgDISHqnpMaLyRjzzyKzeWsgzjbLL5A
vwbJoYvnRE/y1MGL0dZu5bc1kha2DC7LQnVA1JaRRS/2SNLz7f4mQbYOCvjD
9ViRFMlH91u2WfTrII2jib+l2l7yPcMf5X6DOngr+sKN29xWcqPgUmqEYR38
uNXEtnbNRlKq4ZnU7o06uC0/ZNf91FSyZfmBx5BVHbjfTjy0/6Ir+flq1H6s
y3F+xtNdaLS85O+Pb9VUbteBjF9wsGCHrCSXDVHmwZ06eHhGtuWprrSkve89
uVsedZD34t3KmIOE5Fb5fz5qfnWwehhmRjbMK8kkW971178OvmrIMVrWcEvK
tX85/TywDpJlr1Ih+ZySAeOWTbyhdVDje+I3peZpySKHXMqJsDrQe/pDULSM
WfLN9qhJSsQxf5/lcrAeo+RSIFOFemQdnPfvaHBD6CUpqfQO/kXVQQfJlvzb
PmrJ/wH1QsAl
          "]]}, 
        Annotation[#, "Charting`Private`Tag$18261#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["v", HoldForm], TraditionalForm], 
       FormBox[
        RowBox[{"f", "(", 
          TagBox["v", HoldForm], ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"FMaxwellDistAbs", "(", 
         RowBox[{"H2m", ",", "v", ",", "T1"}], ")"}], 
       RowBox[{"FMaxwellDistAbs", "(", 
         RowBox[{"N2m", ",", "v", ",", "T1"}], ")"}], 
       RowBox[{"FMaxwellDistAbs", "(", 
         RowBox[{"O2m", ",", "v", ",", "T1"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7684584708484592`*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"25ca1f7f-0b85-41d9-818a-d430eb17a7f0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$18348#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
diJ2+bG9skJ+b+X+BworLuU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$18348#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$18348#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["v", HoldForm], TraditionalForm], 
       FormBox[
        RowBox[{"f", "(", 
          TagBox["v", HoldForm], ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"FMaxwellDistAbs", "(", 
         RowBox[{"H2m", ",", "v", ",", "T2"}], ")"}], 
       RowBox[{"FMaxwellDistAbs", "(", 
         RowBox[{"N2m", ",", "v", ",", "T2"}], ")"}], 
       RowBox[{"FMaxwellDistAbs", "(", 
         RowBox[{"O2m", ",", "v", ",", "T2"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.768458470930007*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"bc779855-65f4-4691-a052-97859347a032"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"--", " ", "For"}], " ", "the", " ", "speed", " ", "i"}], "-", 
    RowBox[{"component", " ", "in", " ", "3"}], "-", 
    RowBox[{"dim", " ", 
     RowBox[{"space", " ", "--"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"T", " ", "=", " ", 
    RowBox[{"T0", " ", "=", " ", 
     RowBox[{"73", "K"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FMaxwellDistSpComp", "[", 
        RowBox[{"H2m", ",", " ", "v", ",", " ", "T0"}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistSpComp", "[", 
        RowBox[{"N2m", ",", " ", "v", ",", " ", "T0"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistSpComp", "[", 
        RowBox[{"O2m", ",", " ", "v", ",", " ", "T0"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", 
       RowBox[{"-", "5000"}], ",", " ", "5000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"v", ",", " ", 
        RowBox[{"f", "[", "v", "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"T", " ", "=", " ", 
     RowBox[{"T1", " ", "=", " ", 
      RowBox[{"273", "K"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FMaxwellDistSpComp", "[", 
        RowBox[{"H2m", ",", " ", "v", ",", " ", "T1"}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistSpComp", "[", 
        RowBox[{"N2m", ",", " ", "v", ",", " ", "T1"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistSpComp", "[", 
        RowBox[{"O2m", ",", " ", "v", ",", " ", "T1"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", 
       RowBox[{"-", "5000"}], ",", " ", "5000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"v", ",", " ", 
        RowBox[{"f", "[", "v", "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"T", " ", "=", " ", 
     RowBox[{"T2", " ", "=", " ", 
      RowBox[{"473", "K"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FMaxwellDistSpComp", "[", 
        RowBox[{"H2m", ",", " ", "v", ",", " ", "T2"}], "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistSpComp", "[", 
        RowBox[{"N2m", ",", " ", "v", ",", " ", "T2"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FMaxwellDistSpComp", "[", 
        RowBox[{"O2m", ",", " ", "v", ",", " ", "T2"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       RowBox[{"-", "5000"}], ",", " ", "5000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"v", ",", " ", 
        RowBox[{"f", "[", "v", "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7684579267062473`*^9, 3.768457940351631*^9}, {
  3.768457989478598*^9, 3.768458045905896*^9}, {3.768458263230917*^9, 
  3.7684583685949697`*^9}, {3.76845869190832*^9, 3.768458785663951*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"7e4cbc7f-0fab-4b50-bb59-8cdf94673f79"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUl3c8198Xx41Ckr0SGYlCWmjwvu9rfkLJLFQUklGys8kO2XvPz8fH52Nn
j252JWQVGUUZhRBl9K1fv7/u4/m4595zzutxz+OcK2rxUP8uHQ0NjcMeGpr/
r+zcuet/w6rRl8x1TKo2TvHPxvU3K8HVyCXYlp03L15xaYStePJxNQq9UE/H
kJqg+DLF/1aTdzVq5SHsu0dNUgw8ZN7j/rAaVd6b9zgamK64IXY4e/laNTIS
kRsHvQWK709nan44Wo1ki77ruW/UKOZdTc2tba9C4lpf62/dGlck1R/M+LpS
iez4N1NMz0go0ctfyD5/rBKN6BGIASp2Ss/F1O3v361A4S/VtnLek5VkHlFO
CltUoJhlXlbSAYpS6muOjbdmFYiTmdd4XJeq5Ow65XPOuAI5h3yimOwpVzra
9SiaTrsCqSrwhtWmVSlF2pZUpp6qQAd9a7w+1TQqbbWwu2ufqEDUvWdVRdea
lKw4H138c7wC0SpTfhRebFECTartlkcqUOenqbOMu8+V1lgmh2V5K9A+ORl9
M7F2pUIz97ltpgrkd0zCWmCmS6nstvDqk1/l6MWj3wbjJq+VuPfoc4lMlqND
ZwREDlwbUPIiBSvUtpUjcqNY9GDAkNJHrTqTy8XlSLT0LzBVf6eksbLoM/O0
HFXotJ4URR+UtvGg6NKAcsQiz9p79PKUEjVOMNfDpRzdFnPXvvvko5L5bE2l
qnU5Cm2+8DeDZUaJU/5qO6tJOdrT2LsTVDWr1Bm6MDymXY7GE941S/p9UfJ4
/3iuEJSjt1m+D4ed55WmvZ/tUxQvRyVFzGFLX74p9ZS9a5rnK0fxHF7nE/AV
pYpPOw8S95ejY/6PuR3uriqlch8WUf5bhvacsFL/3LmmFEBQHlxeL0OZ3PYy
Rqo/lGy8rILT58rQn5tMGjwfN5T0SsMUCONl6Iiaxywp+6eSGFdfeu6LMhQw
4j+hF7WjxKyxdvlKTRnqEdPK8X7xW+mHB/ff7eIydMbolGaR+F+lCcq5SmJm
GTpqOjPRNEGDdUyZWhrElqGMpmXCujIdRuXw46EJLkOmMwojPB30WJJaXjf1
URkCLDHhjnf3YtYl89IM5mXohLcD/xjbPmxcdTt4wrgMvdlXOLmfkxnTmWSe
qtIvQ5bh9QftD+/HzrHLxpprlKGsvDxBtesHMCoZX5SHZeiR+5N98cGsmIiq
ngrLxTKk8TKWtqaFDWNyd92oP1GGZGrv9JKkODAfttArMZJlaOPczWCzcQ5s
tTiFeFe0DN02kGjejOXE3n9oNObkKUMtHm+TRri4MbIybYv971J0u6rU6qYH
H3b4Ayevys9SRHs414DpHj8W7yr+kH+1FBkIbBjsmh3EvEgE0c7ZUhTbF/tc
7P4hbAWaeGVMlqIyyTnEEyiIWYzbDTm9K0W5OXHgTb4QpnUgOuTw61IklhTj
wEcvgrUSc6Y2OkoRUPpCHS8Uwc7AynOvW0tRvi5Onrgsih1yGV58VFWKrjhM
K8dWiGFL7wV03qaVogStEy5Tb45ivU2xcUcSShFj8tezVk0SGDWbYcQtqhT5
ZJ806K2SxO5brd8Q8C9FF5uO7p9Fx7HLBJuc+x6liPi7imz/XgqTkZqaaXUq
Rd+DzPZE7kpj376/tLW0KkXvxHv+c7aWxV4N4qU1t0qRLH2K1MXyk1hJTc0q
4/VSdLL2XPerwFOYnXfeI6pmKTK+G/kkZ+U09pXBM2RTthTRjGnSR4nLY68W
V3oIx0qR+pknylGMClhJrxVLumgpei3E4TT+QwGzjddNANyl6CnNyP1Pi+ex
S25do7EHShHbbDmT1cYF7JixksAsw7/zTYZ+PfsUsQWhY3lh21S0pvDlxK9r
GNZDk/15bJ2KrkkwOlJjAFY8y3VMZomKPtdurR4cwTEb8t+ygSkqyplXbeRS
U8bm5d41H+ygIvITw9ALV9WwLr4rNPdbqIjbbs6YX0IdI+60qbbWUpHQbuCD
gr0amDUqe2VBpqLbUsyKwh8JmEaBOGtNPhXde1DzsefDJUwiNF2PMZOK9KZ6
ZmI/aWJz2qHvKdFUlLrhsMtz4DLWJfv70J8wKpL3v/qZfPYKRuRwNtd9TEX0
PF/4ma11sLvvbs1tuFBRrytz814PXeyzhfwGZkJFEwk2Rk8NDLAOdcq5WH0q
CrVcNf4jaIgVHhP1ntGmIrEX0xmOK4aY1QoLXRigokXmdvm0kmuY2ttA9bFz
VGSx54XWr6TrmPizrXDp01TUWMBoSIwwxmY9P7MNHKEis133YLs4U6ztpqmB
mBAV5Vpl7VMpvIHl4wPJrrxUxOCoGvD9xU3MYm+z0MF9VOQQcAN6CZtjM7EJ
0hYrFGRNNp3YPWeBXXlnnDU0T0Grju/4nn63wOqFDrOpf6IgclrGRakySyy6
pHhdcpiCPvy4qZWqfBfbXn1glfaGgj6ds3f7xWuNWZ07O8rcTUFqzGWn/Des
sQsdLQ3LDRREJ73CrPLSBitkDpI2r6YgbuoJMdEXthir3qWsASoFeZ8xWHZs
s8M+Tw4GVOdQkAqDFG/vzH0s9tc8wTOEgm7VPJ8NHXTEdrHShq9+FNTVkGTi
6+mEWQc7S9/0oKAqtZFXbRLOmBLHf6y4PQVNH2QWl0pywUjX2wIqrChI/JCd
9Mtrrhhndti6qBkFXZLen1Ap7IbNS3GO7tGjoGO/Av5z6nHH9J3eEdy1KGgn
782nseJHWHNdZsO8KgUJWKdzU+I8sHg1yaxXChT0c9aEucvXCwNmSlaxghSU
9XXMWvKlH0YupB2l5aWgPufaVfaf/hj3ty6CCxsFJQnNm/CkBGBfH+lJX6Oj
oHJmeaWej48xo1berO7dEuRgf+jCh+hADO2ZYL2wWYJwurd2t1WDsKQ46/VD
CyUorM7lVwUKxmjeS1s9/VSCSIfPXtt+EoLZHV4b+TNegs48I/OUmYZikOLd
8OlNCZo4q2/+kCscW+qIDSBVl6CNjorgm18jsev7r63zl5agLXqvTfpfUVib
3iGrCGIJ8pxQFPU/EI2lTBURHqSVIC7N+giqTCxGd9S+YSq+BMnnjC43dMdi
9+1PSetGlSDG880aD2ziMJWtRtaz/iVIsHeUP7EpHisFAQGFHiWoPZpJxMUh
AeMPUV/ncS5BXlf2Xu+XTMRWOAZGtqxKEFBZu/CtLAlLk/6S2apVgvY2Z91K
4UnDsi2+T+WqlSCDnCbB/9bTsMK0bZEgUIIIBs2Nfe/SsQpG1iLCmRLUuCie
WlafidUC/vnjMiVIeuOPKqjJwprcxI6zSJSg1y9Odyk1ZmNdswqlAwdL0KmC
VGbdh7lYr4Dy9yquEnRUM5Ck/TcXe6unfTrpQAmSSntxgiMxD5t4bl5jQluC
NGo4r6T15mPrGeEtMwtkdCysWRv6FWFbg/F/O2bIiO7tQuLRC0Tsv31ZyqQJ
MsLrffLkd4gYk0dlp/0AGX05HuGbF1OMsZY3Meq8IiPhzd871lZkjGuuU/NU
BxlNa42VS8ES7LDh+JuNOjISVXjnG3+AiolHfmZ7V0lGR2pefy79S8WOt63o
NVDIKDil/kLtdikmd4p+1DeHjKx80jwu0VdgWiwyUwxhZPRBf8nHW70K01VV
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
TqNhUw5c4+KqtZpTPAqxo/udKcyFf6Ipja2hxCH14J+Gydx8uNhtDg/D7DhE
9v5CSTLjwy2fu5n/iI1D9ZGHeDXJfPgXXyB72j0OMU6Hu/RDfnxxp/81FcYh
udW3S44eB/G1jXWGwpFYNAAYkquYBfEzhtdXVHpiEaPx0S7d24K4S3XTyKfG
WNRHukhTXiuIbzoFFwrnxqKiqiTRsrtC+PYKj0qGXSzq8a242NN7GKcbdNoR
/xuDtMU/H9+YFsGDYy++tPgcg+o/iHDNsYviDFfpU3NfxiC+q2lQSUUUZ+5N
lBdMjEEbrJ6yvERRnLOrzpHreAySvXAeD3EWw8Ua/5ujNYhGvfdsgh4eFsdV
858MTRGj0JaP1/TnNkl8fSXmRlpUFHI8kcr38K8knquYPGvgHIVe6g0K3VA6
hv8ezv/Rg0UhTz7xP9frjuHPGJu5qocjUcTIKfWPlcdx8QcrBmF0kUjaudVw
p14a33PeYPik2RMkkyg1FsdwCu94IzgSwBOKSkeLrxx/L4dPTihk//kdglja
ihgu/ZHDf37TvefzOQSVwcuZj8XlcUnmkO1H1SFIaWCyUtVJHo/QWBZ6qBeC
BJeSQ3/tV8B1n7dY33oajLbYDt1sUD+Hf6gw27qwNwgJN9P1KnZfwD9LKp+b
W/RH9F7UpOkZgLvEpQi+eOaPusWZHZjZcJxud5k2098fNV2nMkgp4rhwX3qv
Ho8/qgzPWFJNwHFT1407LdAPrYxotFmJQrwfkaISU3zQl9OUiGP9EG80YZ1R
UfdEEhFRLx6IqOCX2q26hdg90fyBupolORX8nUwTdWvcA5k9uKJ+XVMF3/h7
71GZowcyP3TDaNlJBT9JfMEikPkI5bPHcbG3qeCF667n1tbdkMVA/pXuW6p4
TOSHqJxcZ5RjazbU7q+Gb3iabNA8dEbz+UcVKmLUcGObdzcsMGekkuos5pej
houoD0kdHXdCNAruZ1ta1fCKP696Sric0MDJr0mtu2p47qzrvvsHHiJy01Xe
oIfquA1yfC9b4oDUJ7Pvm/uq46ey7pPWNByQUBnPLl+kOo6uWak/CniAxuxD
HwsS1fFPLw0eB/6wR/v2pufbjavjYhVntlPHbNARbGH/mKIG/jVKtueGuw2K
eKtOZ0TQwKtspVIOc9kghj9OEcX6GrjKETH5wsv3kIyrt8qIjQZumczhVP78
LgrbHBUFCRq4jMsB6HzzLrp04qrTwywNfOPqPjb5bSvk3Pz3ijtJAw/eR1va
eMYKPd+/2ULfpIEX+qwudBZZoHS2CB6+jxr4fZOlunAVCxSmXXl3ZUEDl1NY
CNWevoPCzVo809Y08M7v0+Jv+e+gN/bOh+zoCPjrzuwX9Xzm6HJN3PPvogT8
pn+yOdAzQ6GhZ/PNjxPwpfPR/7VH3EJJzFLP804RcBaq74X+/26gGtpDvzIA
AdeJv1n5ZdYY+YspdlgaE3DQAg/qiRqjh9Psp1TNCLjsgvjjZrPrKM/S8u6m
JQFnA8u6CWNG6LWdI/GtAwGnsX1b/4fXCLkv1TntuhDw1YQaETtDQ3S+IjXk
lwcBH1j0XYX9+gg7Vs1hHUjAEbeFMZVFH918PKT3PpSAV+IaiE9LD1nG37QT
jCTgR6SFRCafXEVMFwXQwQQCvufxl+/Ve3TQp/HKN4PJBPzzaOnzCP/L6I+I
l+GtdAJODATm5900kcjTU15zuQQ87D3DSbZVAhIvP7T+uYCA28j2//lip4H8
1s8kPSMS8EvBKX3NX9RQ/EmKvhGZgB8fN89OuK2KoNyAQDeFgDOfOuZg90EZ
6dzeO72vjIB/DVnFlK9BtK3QFSdUQcCT65wOncrHEOkLUYKuioBft6Rrmky5
iJqfG8bXVRNwfrYE08in55BTefIrrIaAjzce2TkfJIf6Mq50JdYS8AzrZ2lz
HqdRQburb3MdAW8Qj3A+NimDfA6ILT6rJ+BKPpTKoB4JVHA5lN6vgYC3DvWu
TlWLIB7v5W6+RgIeeG3C3BXwIIeF1jOB/5h9P2g2kqJDvbd8lVv+ceKNdcHN
3AW8VKF7vecfj5+v0xrwYoVlDtc0iv6xzTI/qdL6ENQrpMH0//FpYfvE/7qP
wBz2uvf9//yVdWsa5U8ch69cQgUP/2MZx2O8hLWTsO1nMgv2Lz7DqKBvm3Rn
YQWtTJnMv/gTPq5rXzqgAL0ZCxmX/+U7KGdBTee7AC9oeIj4PfsX35O3LMui
SjDPR4n24z+9rk7CB7gMDv0Ts6s5Kwl4N//7uUuHlOEJFWsV3nICPtfGxuec
qwIF0lwbvlIJOMMDAiHjqBo0TWo/GltCwNVe1JKWTxJg7Fwwn04RAbeyX3nH
W3MJFv22aLbOJ+BBPBJM8KIWvE5rnKSbQ8DbbJNs4tWuwGFfQ9nUVAL+ietN
atNLHWgt9oj3Z+K/92seaOUsqQvPB3wJPBpHwEX2NSZmUPXgh1cVatvhBPzU
1IjMqYf6UNny+ausYAKOV691dJw2gGHHvBW4Awi42a3jm8u1hnBKjlnmkTsB
z6pMNYIvrsONay87+e8Q8PMm0nnXE41hy8uSuX7Tf/rQtC453DOB78eeLOoZ
EnAm3dmgrAM3oMLZEu06DQLuvHKiasfEDD46UtDL8q9+DySj/zhOmMOW7mIg
8q++h7PJhdw0t+HjjuQjNAcJuIOG0qr00G3IqhV5TIKJgBcm3Qkz9bSAAuYJ
aRyfNXDnRakTczMWUN9UkDtmXAPHsY1Bp8uWcK+A9cL4gAY+/jn08BNhK2ge
vbdkqlkDZ5Oj1tR13oXuzw8fz47XwL0Gf85yc9rCIYdDCJPXwC9JoCe53rbQ
wKShtu2YBs7j9eSkzBdbiEl/fi4gqIFXiAp6q9bbwdkrR8zV6TTwL47KnM5m
96GmP2Ye3auO67JFwf6Sh5A1/BADbqKOcxFj+zpEXSDICBzrNFLDxV9fEd5j
4AINR5uEotXVcIVVZkfVYBdoymK9fUH+X7+4GMLRNucCZateTWLcanh2n6fh
c4or1HNhxWnequLHflmMN8i7QzUpt5zn6qq40iX5uTJNT/jlGSeh/rAKfvfr
2H+pTv7wHJ+lxKt/cgh0uO5uEf2hJqWu3UcAx/uy2LaNJ/zhsWL+N0dWAJ5R
LOYVdSQA2neCOv0kgNPfNHa7HB0Anfju1V2exfChtnb7XsvH0J6rUcXVTwl3
iU037mUNggNDS2+t6y7gz6Qvnem1CoVj7TXycbfkcAvm94/++oXCAr1dG115
OZx98V7LmbRQ+LHEsvHUATn8PjHsUtqbf/zbMOFay1lcXLTbzFohDMZcGq5X
FT6LJ/JqRNIwhcMYDoccuq+ncVdatc9ylCfwF3e1oZ7iSVzs49Bxm84nMNfy
QkH2hiw+0Gr5MGP6CZy6//yrWpksLuMTtEPLHQHRE0WtbDFZ/PPPNvZ+nwiY
qpDzJpbtBG64pIzZ6kTCpgfpVW92pHD5d3hy1loULJA4WdXKL4l7/GhKP8D8
FBKrU36+/CSBN7Odz/EVewoX+G7pSlEkcJVLp4pvGTyF2q8GH38FErhug0ij
UM1TaBM9xGNndxS3y6CdyvKIhubGwrS2b4/gZXW+MwfioqH2f6nhPTlH8LWh
7TlfcjSc/jh5wtfhCO7Bsv791ng0dH3jFPOF5Qge4jtDe1gpBjqau3tUXBHD
c83bj2b/jYHRbMcc+P7Nl+stwjyMLLHwop2oRUuVCM7Ve4sP54+FPCFJubWh
Ivi1hbFD5adiYS2Z5Wr+SRF8UmRQPOZOLAwTiGqqYhbGv8a1KVxtj4V8kqFL
pwME8b2uBab9oXHwT+XzLfMZPlz3O384W2IcdLnzpONDCh+ebhddczUvDl7t
n3nLpMOHy97xZB9oioM6vNdcXJp5cWOdq10Dq3GQQBXIdcnjwUuO7Z4eNI2H
Y7WWF8wjufCNAkdzTpt4SF394PBEm+vfADcXpe8WD6srdP9eY+HCh3nezg/G
xMOyqj+e72M48f/oSFlDHfFQe84m1DSbA9ed1N83IpsAn91mXmeqZMPTjXsU
eJQSoP1Rm4TPamz4lyHMykgzAQ6A54ILY6y416tjz0csE2Ck+s91M0ZWvKDu
j+toagI8NCHRNPSQBf8ZV/LxHV0inAllF+Jz24fDAyKs/OyJsG6iLyJAYB8e
EZ6kaCyUCLFLmuQ1xIQL+wckvz+XCJ9Kh3+YYWfCL92/dnnsfiI8fjtGt6eZ
Ac/QoKsfH02Ew91XHcZV9uAVH5fVLswmwjgPMN/2mx7v9Bp7m/I9EV5ytT7i
VkePfy+r+GbIlATj/vtlc+okPa7KZy7cfyEJ4ue814cl6fBv802h7ZlJMJVJ
LfSh0r//YSCJS4ycBOU5XqaepaPBeQQTcgNqkqDBs/uzV+P+AlzXrhHrS4Kh
QpxBCuV/QEI9/0rd3yR4R7rnHt3ub6D4xM2IapEM8cd6t5f6t4HukTszzA+T
IWeeMB2b4za423L5oa13Mvzk9mXhDsc2iFk78kQiMRnq/W6bj7q+BWZNBptz
O5Nh+DNRSdLaTxApdVI86VgKPPZJbNrVdAPkdghU/pBLgeeYag4QWDZAjRkD
0FdOgb7aSkjw+Q8wHT95nc00BZqgWeYeyR/g7G5k5JPIFHjCpi9ueM86+PB6
Yd13JQWOgEZ6lnffwXi2/JHsnRTYflr2h/SN72DMKdCglSEVnq2ZjVr9uALe
8Qk++3M4FZ7OflxqtLYMhiyvuvlfTYU5RiZLnEeXwOvdml8BFamwS+8CHj28
AF710R3La06F3N+aQ745LoCXeVeNX/SkQntDz4li1gXQTVisp/2UCq9KD1ac
1ZkH7QmCXoEcaTD2ad+jQ5NfQJN00O8g5zT4sLZcZlxhFjT+6Zcp9PvH16YF
bOZnQMNbwVsdEWmwUWUr82DaDKh7VNuypyANMm0UXhv7+wlUty/6hQylwV71
Mln78Y+gKlmhvGg6Dd5bEOWqSfgIKm2Dpju/pUFKUoc2o85HUM4mBBn2pENz
8cs3H0ZOA8oNXdowuXR40Eb9xOTjSVAim3WaBNNh0nRBhMqeSUCm/Xqn+3I6
3Oh3XAsJnwAkUlAb4910+MaWQI1O/gAKftQGhSelQ+mcqQHanjGQESnEEPEz
HYYJ7v/o4D0K2l7n3amiz4DsqXHy5eyj4Ot+iZZx9gzYEOH6po40Ai5GybpK
S2dAz0HzEMYPw+B9FD7Ta54BTcqXQpaNhgDNm3Zs834GVGnuG23aGgTHDlxK
E/LKgGr7+0eFswbBo6e6ug6JGXDmbPNO7Ne3gDf6Tivbywx41qP7tmvKAAB9
Xw6eH82A3fZ65y9rDABrVju327MZcGJ6wYNvuR/URDvLVP73b//JoLRxbR8w
jAlK1z+TCVtOvS1qsukFcbFF7kkZmfBSWn7tWbUeUD9wfLClOBMa8uIBjK+6
wUf2shNzNZkwx73q8379bnAqrvazwkAm1LboFgiy6QJ9cd367/dkQcPXWb8v
lHWAn2+1y2g4s+CJviNPctU6wGHOgX3HhbNgmiZl5sdEO3gQ/x55XsiCPoE/
zipztQOWhEXZQw5ZkF69fCAr6QWQG3oQoeqdBSWjGB/HXXwBbnKtf7EPz4La
A0Yn5D8hQEnYyWzOz4Ic9/0YHM8ioJW4f7/Zuyw4CGgVPo+0gLCkE/O5MBvS
2HZvjcAG4LUhmT9/ORuaDvOpW7bXg/sGYrdkTbJhWaeiqeyleqDLwTfU5JQN
mecpR02M64DAU5rno/nZcDlDTJExvgawLO14CpVnwy3e29NhR2vAH61NOaum
bHjudBk3TdMzMMv0tWRtKBvGP7C/U/utGlCDh5JZ9ubAs5kAv2FZBbJn3+gZ
cORAFedA/fq9VSBOpYclXSgHRo+EavaRK4E7TUugpEIOvMeeUsj4qwLgPkQH
lXs5UJq2yntQsxwMunhqeLzMgS+DJH6xxJWAjkEX2ucjOfBMzidNN4YSUHva
oXnvTA68a+bX7uNHBhnfLc4k7OTA20mKgoruxaBKXoLtHU8uVN4fQVEKIgLp
uwX3dw7lwr5QTUUrFiIoTBR5JSSWC2+Z3VAdSikCKT8EQqxkc6GjvSGjeU0h
8Klk213TyIXhf1SkDzIXgM2PUcY8V3Lh/KiJ5L3CfODAzlx73iAXRlHMz5TD
fHDn4R4nf/NcOJyanLDPPw9onNieY/HIhS1qduc2OHIBG3lmUJKcC1V9zUu/
c2YAwZhd9f7yXJivo3eZ5JwOpNy4G9xrc2GhTDr76Ega0FDWyOlsz4Xv+5Vb
9ImpwGeMbG85lQv1vtRsLD9IBhHP26aYv+RC+Z7UrsfzSSCl6INe1bdcaKOZ
zMVklQSqnA6cp93OhcD3nnH53USwsM9pTw5XHlS+Kure9yQe/Pz+5JGGQB4s
n3jBaHowHtCP5n9dFsmDFuZPQ+5S4sDh/OEBJdk8+K7k2mz3aCwwvHg+a/xS
HuQdypqrjI8GFiJ67IFX8+BHJbEPtO+egocMdkHHr+XBmqRKmyjhpyBiMMPW
wzIPGh/hJfxqjgTI7q88r18eTK9569kp8QT06fKTW4LzYJMgS2h4RDj4oHBa
8G5kHuQ7BqYm1sLATzpLumepedDOZfHq0qtQIJPR1adXnQcbZzO/ZBcGg4uP
p5W3G/7ZO17RnBELBoR7W89yUR4MuaLGJ1EYBCzOSmV8f5MHW66sHXhQHghS
Xz+993QhD37K7hbA5gMAsZI4Lvc9D5YmCR7v8g4A1SnPr0xs5kFD+ij6Yc4A
0Ge5dlaaPh/mb/+3GxnrB/b8NqR5KZQPn6zeC+DK9gacMw9cHMXz4bQI9zPv
JS8g3BM6xyedD1/4XZE+hHuBi4n1vdbn82EGMkrIXfUAjjKCaXsM8qFC1NIP
tUB3MCu6qqhokg9pAgQPeG67gWt8HVNO5vmwqr+j/7mLG1Ciuy8+bZ8P5WzO
Oas6uQLG903lDcH50HBbueletDPwehOjvxqRD8PY2W65CDqDpTbLTYm4fCjQ
1vCDp9QJDJbuV0zMyofjvH7P50ccQXbQjS6H2nw40ElqDw13AByeJ22LmvMh
Q2imA/frByDYgZ5loi0fypi3rf/meABsTSh6mv358D/eqCo/qj2QO7k7cWQh
Hy7Q3mxHHLaAJN7vb7qSD33mFB9kudoAAYECsbiNfHjaP9tQ9MM9QLNX2+YP
TQGsmI18+KbKGrweT//x/mABZFTIaUiIsAJgwCGZTaQAJkolnAxmsgIVnSoX
NCQKYICK4oOgJ5YgueKrX/WZAsi1L0jJNtECWIReZI7WLoCUF3+b6HpvgxFv
1tIOvQK42+1ik3L7NrjkNHN193oBpKWRCHf5bg5O3IxIsrEqgHteMZuPm5qB
rdPjIqq+BbC4J+cxq90NYC9Z1u4ZVADDwgVk/tabginBQOuKJwUQ1b06fJrF
FHQwSlGFkgtg7+g5x5+txiBm0vPcVlkBnM1EOc4G1wDd0JVx2ZoC2JqrkDry
wgi49oj63m0qgKXbJrxtZ42AafXLtsHuAghFPYY/ixoCiScHdUo/FsDrKfvU
JY7qA9ZD2W0dcwVQRUvZ51e5HvhJFTs3sVQA78xdXk3H9EDngLTI/u0COOOQ
Ts93RxdY8YN1G45CeDHpULtx9BVwuaTNOoCvEPJZhmyUvLkM5JQIH1KECuEj
UwpdKcdlsOe2bkfX8ULoIewfq0/SAgUki2RxlUKoMbrfQpnhEoi4MM+sdKkQ
xpTsZZGxIQDn1/b+BjqF8Lsyj+L2Gw2g8t3VJtC0EErzjQ9NFaqDGYWwix+d
C6GWAnfKfV9V8Kpnf/kvj0I475p8479dFVBlGnuEzb8QTv7rCx2+KuCxXxoL
iCyETC9aK8kRykCkizKVUVAIBSkJzHExOGAyPmVQTS6Evl/HlPc3A7C6+Kz7
VXkhzDukJjm0jAF0oLViu6kQhjwJOPz6thIwNxoIvD5cCP2rj1T8F3ABaMwb
/nIYL4RDvQnbj4fPA1nPMfvQj4Wwh5x33UrmPPiTOWNYs1QIUfWZfe8XFED2
5w0Jrr1FMHTh/N/SODkQ6u6ZIbW/CP46pHpSb68ccGD6w6bCUQR5eF8ej/Q5
CzAZxm1HoSJYl3zOws7tDJhwOfi6T74IJm7VugRGnwIde7PxOcUiWF/m3hks
eApQU8Se/adcBGMvSP5dNT0JfJqks2R0imDQlmXxcPkJcIgePIywLoK+4SQK
d7oUSNU22z76oAiO3ng+8entccCd6Bf0wqUICs+s5VxjOw5Yjj5P2Qooghv3
7WMy0iXBbw2IrDOKoJe5SnnEijjwiLmtRZdfBAebdRuCr4qDjXcBw1nFRVDL
dMaJqeYIWLZ5sTBcUwTna8/Oyz4VA1MRKhyqA//sNfHCKgcRYDpkkTE1WgT5
gngbb30SBqOHgo56TRZB68FXdOlLh0E/tf1C5dcieMTXiJ+TXwigPjUL4b1E
eD/w2kZNy0GgxHd3qXE/EY5+KJnw+MkP6s1D3K9xEqFF19F3TPL8oGK1M+Kp
MBFm9FgafWvjBXmchOrdC0R4sjdnzk2IGxy+cQ9LgUTokFnWaBjABdILwrrP
EIiw8Amb/eA8J4iX6/lga0iEx06Z9R7t4ACsvgt3994gwtfTH+ybznOAiE6m
1dw7RFjMqtjwsJIdBF7T3PPegQhd8pf2e99iA3+ybaNd3IgwGJXLKVqzAq/5
J/xsPkTIJnllS9/9AHDxeCWj8YQIHc/q3n1G2Q+s0rWNnhUQYdbB+f3Nd5nA
xxn76aslRDg+SHpCKWAEN6WjbL9VEKGl+d+K+/MMwKi511es9R/vmj1q8N8L
BvcsM7Z2EOHec0S0PrQH6Fw5EG/ymgg15O5sGZ/YAzSmrhBj3xNhzf6y51zf
6UCbhMMpmWkiRHZdtYev0wHwMLqx+wsRBjhevNXeTgsUaPr7/qwTobfol0C9
EhogKab76/4BElwR7af+0vsPY/KSrkzhIsEg42dVUq6/sa9vGezbDpKgacXc
XFXmLlb6uGWKT4IEl/vZhzhodrCzn6S62gAJ6gf6xTnv/4VxX2AIWFYjQfMn
JoTyGz+xn7GfLvBrk2AuLKb5XbGJNcDU0gfXSXBbbm+egt0GhufuTeJ3JME2
Zd5OH651TGTro46qOwlSTKtb/cLXMDrdZiYHHxJkZel5GkG7hnX+dfZpDydB
4dPVmml/vmPE6zoKK9EkqCBQQUlm/I6Flx9f5U8iwcMcHpde8q1g2uYfLR3y
SFDycdr3v5eXMJm6JqE0Egluuqfq5jp9w1jZUt61l5LgGdl7YWWZX7G3rVe0
DzaSIL6hXXhj7yJ2/XDTmY5BEjxZs9h2UnAOO++evLTyngR3x2qr7z/8ggn0
OREPTpPgxL3M2Y7uz9ik7zGBh99I0PVvzoczYbNY6wj9cNoaCbrslPPTrsxg
uSemn3b8IsFhsVNON0xmMMvJJFqBPcVwlWdy5ST2CVOTd2pSYy6G6Z2X+Oxq
PmISTy+7PWQvhhfSLY0qTn/EFpXoFzsEiyHh5p2TI/ZT2MNMx4GH8sXw5mRS
+/7hcUx3QzsiXbEYfssqKeT+O4aduSyp1qlcDFXOXLgefGoM29ydrBPQKYY6
zBYCH4reYaMGDU7qhsVwziX6q/XiKFZPSZR2NC2GVf8mgvwzo5j3De2cTuti
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$19542#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$19542#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Gs8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$19542#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["v", HoldForm], TraditionalForm], 
       FormBox[
        RowBox[{"f", "(", 
          TagBox["v", HoldForm], ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"FMaxwellDistSpComp", "(", 
         RowBox[{"H2m", ",", "v", ",", "T0"}], ")"}], 
       RowBox[{"FMaxwellDistSpComp", "(", 
         RowBox[{"N2m", ",", "v", ",", "T0"}], ")"}], 
       RowBox[{"FMaxwellDistSpComp", "(", 
         RowBox[{"O2m", ",", "v", ",", "T0"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.76845876047782*^9, 3.768458787331955*^9}},
 CellLabel->
  "Out[220]=",ExpressionUUID->"27238dcc-4e41-47a4-ba7c-fbac7ee48392"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
v4T///7yfwBCFTj3
          "]]}, 
        Annotation[#, "Charting`Private`Tag$19630#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1m3c012/Yx61UsleSFSUjlb2+n/tzU4SfbCKrZBNRQpSdvff+mkW2UIg7
M2WTjCgjJJuEpKfnnOf56z6vc673+3pf5z7Xn9cZC2cdKzISEpIqchKS/33p
mYmbf4OrUX3bV3/rrnuih9s3elYDqxGzYZbY7rUHossf6Z5P+lUjKVUeu6O+
HqJdyT6mDV7VyCmVLGdqyk/U/7T5u4fO1ajDuDNW5k+c6DYvV9aKQTX6O1lf
radTIzoqmqE6ca4ahcX+zN1X3RfN0Uwh1rZWIf2QR+a21/zFnr06lb60WolS
N+XursZli5NLymbJCFQiKraTR/FTmRLNvEoOjlYVyNgpy/bdWpjkF6+Xx+XP
lqPr3FIK6Rl+Usuj7BoDqaVIvik46ZOfsfRMTLywxeoL1MrKmNSSKC+TKvwt
o0mtGAUF5WhPvqeS/b3syq3Z+hzlEjJqTF3eyl47ziQ/zv4MmcWTTygveMoB
9TWb1KgC5NRCp7tpeFr+p0u+wFmqfBRfXXIs80G5fNKmg3+RZS6ibxdm/HNL
kSBOymYbaJaLeBjib/advErop2u7bm6Yi+TX2h4v7CgRTohwnGJRz0VbLhSq
7QQ1gq9Nd7mveC6Kt8ipfVCpQ7D7fGHyBlkuoipNYxb8YkEgdKxIUxJzkODF
tBKKPn/C2HAq53RqDhKuQqNB3oGEh7NK5I3xOahkZKC0RPMpoZIkq9clOAcB
OamP/A/CCPzyGlaTTjno8n9MbcGxcQS6irK4l1gO8mPuXPotmksoabrpES2d
g4aucAQff5dHUOuhNLMXzUHqPjIVo74FhMAlM0GecznIiob3QYF1EWH3LB0K
p85BGJ/qlntVJeGuebPBry0iurn2oOV05ivCTKrzisUEEYV9SDpaz/KW8GPD
583rYSJaM1Sl7yluIWyrxkTS9xJRz199o1LLNgLlfoVIEyIir2X9Xlm9dwS2
4oEeh2oiUorPdxAg6yEI3ty8e6qQiPjCrbuHVAYIclRMtJ0pRET1dCOdO2mY
oF4vXvYgnIjUGR+aufuNEszs9TR4nxCRxRzHuabzk4R77G6rffeISEX8OfDR
nyZ4ugY18dsTUXXT7pGv32YI/u8Tox7fISIT0a/bz1LnCGG8hWbDJkQ00u3+
dOH+PCH+Ue1FYQMiEnvxNHnDfZGQMdhx6KdJRDtGAjO3ipYI+UKfekdViKi5
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$19630#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1W3c011/4tyt8ZZPIFhGy6fO+74syiuzRMCs7sjIie++9Nw1ZkYyMaxQq
eyQZFRHZScj49Tvn9/vrntd5nvN6Xvec5577ev54uC2ddO+SEBERxZESEf3v
ScuYv3kUVoM6TGfLLX66iR1uGfWuBtcgYMqac/OPl9jy6MmnUwE1iKtL/fk2
u79YT5qfyeuHNUh20dj9dH+4WOBps+4HTjWIs0v0HPGtHLEtnjO5K4Y1SN1R
qDftXqfY+IVs9c/8NciIVPXvNTUG8QKt9PxXHdWIXZmFKuN4pfiT+lNZS6sv
UOTfnF5X/18XSKXlc+UE/+GiWy6vnjBJtvJctne4W4VEvihc/zTLLzXz8OWJ
i3yVKDNANEvTHkovj7NdG8woR7Sirg38bXIy3+KThC1Xn6OYt+ZURaNyshnC
37NbrpSi8IN0lqQ2frm/yy6cWh1PkX7HAzLlz7/lVE8wXJxge4IISK0+IrhH
HmisWWfEliBBwaNkcDlQ4bdzsSAfZTFSKTJbjOI5dzF10z7w2Z1CxMBtyxVz
fPjitwynFcvP+WjcRreWweA24eeGX3PDSD5a3+CPv3rnLmFLPT6Gti8fzVkb
9DaWWhMo9qrOt6B89HLT4lbUlgNB6MbmvVOP81H1zHUWvMCdcJ/NfbX/fj4K
nSGXzf8dRjjI9F4jUOSjWvlNFpuwMoLitoeZ+Mc8dLjwnZ544yUh/NXezHxB
HspbJ51+XdpCyLQ67Z+cnIf0AwiVLpOI8JyZwKUUloeyjDiOWiPaCX0PfM1z
HPJQMqZuT2T1lrA51pK/o5OHZLtzR15RvScwyRJ91ZPNQ/w0vH0hOgMEuTRF
7kr2PLTlHMa5Xz5MuPUn0IKSJA8Za3UlfK37SPAz6iy4u5CL0s/p95gnTBIK
68i/oQ+5iJ3vIXvWha+El9YCgY6tuYj07115yslvhLcsqjzs1bmI0uJXwe+K
OcJ4l3V7T3EuYqRke8hVMU9Y9Ai39EjLRRqkrDYlUz8Ie2efkfBH5qJa3EHj
UPEngXq8p3DIJxfFd1g2UH9ZIZwJX1Lyd8pF21F9kQmm6wRxOarZ85a56N1j
ZtWwtQ2CceW7mVMGucgvajWjKucXwV8gcpJcLRelzXRM67r+JjzNUf+0oZCL
3hw9Et11/UPoZzwxNnU+F3nXCok+KtolbEd1D/Vw5SK1sVeT9BT7hDOk4f21
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$19630#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["v", HoldForm], TraditionalForm], 
       FormBox[
        RowBox[{"f", "(", 
          TagBox["v", HoldForm], ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"FMaxwellDistSpComp", "(", 
         RowBox[{"H2m", ",", "v", ",", "T1"}], ")"}], 
       RowBox[{"FMaxwellDistSpComp", "(", 
         RowBox[{"N2m", ",", "v", ",", "T1"}], ")"}], 
       RowBox[{"FMaxwellDistSpComp", "(", 
         RowBox[{"O2m", ",", "v", ",", "T1"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.76845876047782*^9, 3.7684587874284678`*^9}},
 CellLabel->
  "Out[221]=",ExpressionUUID->"e81659ae-46c7-43d5-a504-bfa9a72c1dfb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
LPr//dj/AdmCfeE=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$19718#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1XGk0l1+4RVLmZEzmpDJPGX/veQ8KIbOKQlQyT0WIZIrM8zz8JjSYKalw
/pKQkKGBROY5CYnSdde699NZe5299/M8e73rvOt8OaKOXubX6GhoaPbS09D8
73qAi7j6L7oWFcXwfcQzDVR31s6/W46sRSa6nNaSpWdVFwfZH4yE1aKK60pa
9PdNVTuyQm1f3K5F625TSWNJlqrhh+3b/b1q0Ye/q78tXturrokJFS6dq0VC
qUEf3k77qn5SyD8zfLQWDSQOnpFzy1UlmWQTn76qQb/m/h3eDp9VLX12KG9+
uRqF9Y+537uToLbnpHqh2vFq9PFtheLDBBH1ZrHTbu7XqlB6yJHerc0H6qO3
6xg1xStRzuptnZM7KhqLn/iN3+eUo+9PZ2dyOZ9ojCenSTkuP0bJXYOxU2Yq
mjlSU/lNBo+QpFe6puXhSs3tRV9hk1cPEPGHAI0WBy9Bj5FTc4i/FE0VJzdf
uBlOMA9qU33IVYoKuYa1LtdEEOwWApUD2ErR1+oZN9+9UQT/d2MyPHSl6Pic
3cqplWhCSUqFiPlcCdIIXtqqp08i0PMbMHTWlyC+e7KWVms5hBbJsPcNliXI
wuvfM6fv1YTuPOXuGOMSJJwwz/r2UC1hiGW287x+CbpsIj6kdr6OsLps3Lqu
WYIkXK6q7jtQTxCtFahXOFKC2k429JOLGgmmt+YfejCVoMELntJqtK8IdzWf
5T/8UYwC3FoZyy62E6r+RSVNfSpGXqeKobdcD2H0lUW4KCpGnvtjwjdW+gkb
xc9vN9cWI3LeAvvL2A8EthhRP9vSYhSUGdOeEPiZIOEa47mdW4xoHfMrWNq/
EIDR9+s5ibv7Wol0nFpjBPf1tUa/8GL0h9PhiIvJOCG3cIvT3L8Y1WbEXlop
nCS069G4yroWo3ePS80TVWcI6yt7EZNdMXp4X+Yjr9g8QSyXmWfGrBgdrhoM
dXdeIpjqcLi/Ol2MEtmSHnfGrhBmeLmyqvHd+henZrTjfhDuLPK0FKkXo3tH
pe/8zF0llGUI8AXLFKPINZ+OtIU1go6rsI7rsWJ0gPGDjZfsBmEIiHleEC1G
z8JE/S5F/iLsnz3WqsxdjBjXph5OeGwRil5KfhdjL0brYquPx/f8IaikyPBz
MBaj22mB/U3VfwlXNJS8l/5QUbF9CTIpp8G22FTyhjeoKA58vWlSRoslT6i1
daxQUb3m0efqz+mwpnggUDJJReotBL5TDHsxKwctvfSvVMQoKO8DdBmwxZOn
fMM/URGdMY/65+x9GP/omXa7LirqvHd0kxDEhFXXGv00aqOi08sJ8+bMLJh+
jImQJqKiMGmGFWotK+avYHWTt46K3N5kVzwsPYCxMlwo2ltBRckjOSdfkzkw
6pBN589SKmLX47tpU3YQex9xWaQ3j4q6H8f3wWUuzPnCFcOmDCpK0N0knzvO
g+1IO/mXJVFRXx1dj/dNXkz6g1tXTAQVfexzonTq8mOvHnn+8g+hoj39hws0
eg5jNqE+YtduUdHm41kRDk9BLOb4rQAtNyo6n7CtThskggn/DaTIXaOi57n5
dHOeotjT98HdgvZUtPjTsLXBRwybCAoX3zKnIhNBVklVqjgWZBJlMmtERRJi
TmlJg0exA+IxQR90qajZcrv0BN8xDLxL6K3R2PXfSif8GziBDZKSt4nKVHSu
77qngZkU5u6fJpEkS0ULVq94N8elsVzhnGA3MSo6+uRiZuFReUxhLa/UWoCK
pvPcXOQOKmDt7YV9ejxUtPo0PvEPsyK27kM9Ls5ERWn+dCPqksrYZhIzSNxD
ReMK/sc3XE5iW+W+Fpt/KOjpZKU4a6MK9vftZ2fHDQrCz3kHUcTVMJp5eKfr
OwX9ct16sExSx+j2P0hTmaMg1xbRXydVNLG9EuwPieMUNG3p5tM/TsCYHEf6
bw5SUE+KTannaYix3D0197WbgtgiqeU1p7Qw9sLHO/rtFFT+Q7oYWGhjXEOB
JwRfUFDAyo2fXaRTGM/mGIiuo6A8W+Lz5onT2CEefcsf5RQ04ZDS9UVNDxMy
5wl9TaSg+9MpG3yiBpiId0i6XC4FybsebSA/NcSOJE4+zEmjoIZnQgsyV89i
xztrBjzuURDzdSuPG/dMMcnZQ/MfQymoc7+aXlyUGSbDEPZPK5CC8gMmF0rS
zDFFbRNJHncKqu4qb74+ZokpX36K371GQb6cSe4LIucw1TuCVvN2FNQ06Iwp
3DyPEZ4vhDaZ7eZz9DbJ+rwNBj6ZZxw33J3ny2HRxLmLmNZGw6PUUxTUrr7f
QDLNFtNVjBl0UqWgPY49On+zL2P6pt/ne+UpyOCKo+u+DAfM0PMcjaYkBXH9
Z0gtKXLETB+JS7ELUtDZnPW1zYmrmHl7HAzkoSApc/6mG8JOmNX0qtUEOwXJ
RrzFuTyuYzZi/92tp6OgqQiLX5PartgleDxT9A8ZSej+jdN/54bZ2yU9jlsn
I863I4Ianh7Y1VzbD/azZMT6PPerZ7A35vSsdaHjGxlpFF0uo/j6YC4fpGiV
h8nIqP/g+kd/X8zz4JbU/m7ybl43DRzLbmLe8g5avm/IqIfnifi1UT/shnH7
uS+IjL6JT6u0HLmFBcRmhlXVktGTzf2ZzpOBWNCDv5n85WTUHBs1/p/jbSyk
7WpZZAkZ2VzE2zI3grFwOqWPF3LISKESWj9XuItFiuQutqSSUczWVmiEcBgW
DWjpZOLJ6DHbQnw6fzgWH9QjTRtKRksORyWCNCOxxGwVbbcAMtqW6rw44hiF
pTwtOD/oQ0a/VFXeleTewzJX3cIfXiUjTGH9Cy1+H1Oi5XOOtCOj6Hrr0fPp
sVgve+tZ+wtkFMlhn6e+HYcxywgc4jbazWdBiUGaNgl7oNm+8/00GSGnCH52
s2RM1+DmZCdORqkCpzjlpVOwu9e7Ku8qkdGXo8GkBPo0TNA/IOOiDBmRJaVe
LdKlY88jxW+rHCOjrx13gtXZMrA1UrDuIj8Z3X1BuSNvnIWlVB2XfsNFRqeK
IvaoR2Zjss0DHGS23X7EtiwWO3Iwly/SI+fpyMiE+4yGV3Q+xrDwqUXxDwll
kDnvTtIUYtTfkQ9YN0iovCuu1zShCPvKM3Lj1RwJnXxCZnDyIWG3j963Lpwg
oedaKiwL58gYn/JJPHCEhOaDb2nM6FEwc7MEJrn3JDTBOWMVaVyMfbdXX2F8
S0KzLtWDVtdKsHjPqcHJVhLa73AR0sSWYm/iMFLuMxICEYb6qf8e7n5Pc/f8
akhIc+ic6YzZY4zuYYa7admuXqCgb6WuDCO0LakyEEkozF1561JVJfZ5IEfw
Ww4JPVkZb9EorsL8J07veZm2O8+l0ZzzwdVYNU1ht080CV098DiqxqAWM2Y3
qDMKIyH2m9ZlG9p12KLgRs6x2yS04VHKeEHvCSahaXxtxJOEGAxK2V7512Ov
zmwZPHMmoX0BLAwMlGfY5Qsl8mmOJETUuuz+eaQBy/Xb2dY/R0Lyd2YC18Ne
YqqRj74dMSUhHf8D2nWLjdhA6rk3O2dISDXwiNeKczPGXlWRWoft1i9nHsg0
+g8ra7IJSFIlIYFmH3//Yy2YwTsGO1cFEkpQ5vfsZ3mFRc7bnRA5SkK3bhZW
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
/+8H/A9DXQXI
          "]]}, Annotation[#, "Charting`Private`Tag$19718#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$19718#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["v", HoldForm], TraditionalForm], 
       FormBox[
        RowBox[{"f", "(", 
          TagBox["v", HoldForm], ")"}], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"FMaxwellDistSpComp", "(", 
         RowBox[{"H2m", ",", "v", ",", "T2"}], ")"}], 
       RowBox[{"FMaxwellDistSpComp", "(", 
         RowBox[{"N2m", ",", "v", ",", "T2"}], ")"}], 
       RowBox[{"FMaxwellDistSpComp", "(", 
         RowBox[{"O2m", ",", "v", ",", "T2"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.76845876047782*^9, 3.768458787516629*^9}},
 CellLabel->
  "Out[222]=",ExpressionUUID->"2cb125be-9936-41a2-ae95-6570623bb461"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "most", " ", "probable", " ", "speeds"}], " ", "*)"}], 
  " \t", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"H2T0MPSpeed", " ", "=", " ", 
    RowBox[{"vP", "[", 
     RowBox[{"H2m", ",", " ", "T0"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"H2T1MPSpeed", " ", "=", " ", 
    RowBox[{"vP", "[", 
     RowBox[{"H2m", ",", " ", "T1"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"H2T2MPSpeed", " ", "=", " ", 
    RowBox[{"vP", "[", 
     RowBox[{"H2m", ",", " ", "T2"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.768458400250526*^9, 3.768458415560442*^9}, 
   3.76845857714499*^9, {3.76846014427464*^9, 3.76846020436171*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"21b0b6a4-721d-4db4-87f0-3c9f46b2828f"],

Cell[BoxData["779.0828269121331`"], "Output",
 CellChangeTimes->{
  3.768458475964919*^9, {3.768460160535075*^9, 3.768460207828779*^9}},
 CellLabel->
  "Out[237]=",ExpressionUUID->"bb577b3a-1434-4be5-a589-585d1996304f"],

Cell[BoxData["1506.6192944083946`"], "Output",
 CellChangeTimes->{
  3.768458475964919*^9, {3.768460160535075*^9, 3.768460207831029*^9}},
 CellLabel->
  "Out[238]=",ExpressionUUID->"1428cfc7-8371-44c4-be47-e50254e74aea"],

Cell[BoxData["1983.1372482452891`"], "Output",
 CellChangeTimes->{
  3.768458475964919*^9, {3.768460160535075*^9, 3.768460207832892*^9}},
 CellLabel->
  "Out[239]=",ExpressionUUID->"1af08829-fd73-4cd0-b404-87bf56c801e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "mean", " ", "square", " ", "speeds"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"H2T0SqrSpd", " ", "=", " ", 
    RowBox[{"vMS", "[", 
     RowBox[{"H2m", ",", " ", "T0"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"H2T1SqrSpd", " ", "=", " ", 
    RowBox[{"vMS", "[", 
     RowBox[{"H2m", ",", " ", "T1"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"H2T2SqrSpd", " ", "=", " ", 
    RowBox[{"vMS", "[", 
     RowBox[{"H2m", ",", " ", "T1"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.768458512175102*^9, 3.7684585841770887`*^9}, {
   3.768460213246509*^9, 3.7684602508102617`*^9}, 3.768462499738366*^9},
 CellLabel->
  "In[240]:=",ExpressionUUID->"f23fd499-29c3-4a3a-bcbc-4577fb0ecb9b"],

Cell[BoxData["954.1776966498962`"], "Output",
 CellChangeTimes->{{3.7684585883221893`*^9, 3.768458607712346*^9}, 
   3.768460251285961*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"a3b9736c-ba84-49a5-9172-cc8b48b347ae"],

Cell[BoxData["1845.224253966296`"], "Output",
 CellChangeTimes->{{3.7684585883221893`*^9, 3.768458607712346*^9}, 
   3.768460251288559*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"5dc9e5e6-1c12-45a3-abca-b14564283b77"],

Cell[BoxData["1845.224253966296`"], "Output",
 CellChangeTimes->{{3.7684585883221893`*^9, 3.768458607712346*^9}, 
   3.7684602512907*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"e504f0b1-015e-4000-9760-4cb8549bd7c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Checking", " ", "the", " ", "normalization", " ", "of", " ", "the", " ", 
    "distribution", " ", "functions"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"FMaxwellDistSpComp", "[", 
      RowBox[{"N2m", ",", " ", "v", ",", " ", "T0"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", 
       RowBox[{"-", "Infinity"}], ",", " ", 
       RowBox[{"+", "Infinity"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"FMaxwellDistAbs", "[", 
      RowBox[{"N2m", ",", " ", "v", ",", " ", "T0"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", "0", ",", " ", 
       RowBox[{"+", "Infinity"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.76845928703799*^9, 3.768459374295578*^9}, {
  3.7684599177870483`*^9, 3.768459940146709*^9}, {3.76846026269238*^9, 
  3.768460264933528*^9}, {3.7684603816462793`*^9, 
  3.768460391756229*^9}},ExpressionUUID->"32ac5cdc-73e5-4339-af4b-\
1ea53d9c4420"],

Cell[BoxData["0.9999999999999998`"], "Output",
 CellChangeTimes->{{3.7684593325181627`*^9, 3.768459374823595*^9}, 
   3.7684599409231977`*^9, 3.768460388603291*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"c615de25-9124-48c8-a85e-f3394cca1e1b"],

Cell[BoxData["0.9999999999999997`"], "Output",
 CellChangeTimes->{{3.7684593325181627`*^9, 3.768459374823595*^9}, 
   3.7684599409231977`*^9, 3.768460388642058*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"8c61cef6-fb34-4df1-bfae-871d0069a034"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculating", " ", "percentage", " ", "of", " ", "molecules", " ", "with",
     " ", "speeds", " ", 
    RowBox[{"in", " ", "[", 
     RowBox[{"0", ",", " ", 
      RowBox[{"v_avg", "_sqr"}]}], "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"FMaxwellDistAbs", "[", 
      RowBox[{"H2m", ",", " ", "v", ",", " ", "T0"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", "0", ",", " ", "H2T0SqrSpd"}], "}"}]}], "]"}], 
   " ", "*", " ", "100"}]}]], "Input",
 CellChangeTimes->{{3.768462728917453*^9, 3.768462784096959*^9}, {
  3.768462814812768*^9, 3.768462820176805*^9}, {3.768462875538782*^9, 
  3.768462886649993*^9}, {3.768462943382956*^9, 3.7684631389582872`*^9}, {
  3.768468168689142*^9, 
  3.768468169089677*^9}},ExpressionUUID->"a86ca72f-1e7d-4c7f-b3c6-\
2a87fb0256f1"],

Cell[BoxData["60.837482372891095`"], "Output",
 CellChangeTimes->{{3.7684629556575747`*^9, 3.7684629652435513`*^9}, 
   3.768463073220354*^9, {3.7684631125127983`*^9, 3.768463139341959*^9}},
 CellLabel->
  "Out[390]=",ExpressionUUID->"a3c150bf-9d71-47d1-aab7-507a64322835"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Calculating", " ", "percintage", " ", "of", " ", "moleculas", " ", 
     "with", " ", "speeds", " ", "v_most", "_prob"}], " ", "\[PlusMinus]", 
    " ", 
    RowBox[{"v_most", "_prob", " ", "*", " ", "1", "%"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"FMaxwellDistAbs", "[", 
      RowBox[{"H2m", ",", " ", "v", ",", " ", "T0"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", 
       RowBox[{"H2T0MPSpeed", " ", "-", " ", 
        RowBox[{"H2T0MPSpeed", " ", "*", " ", "0.01"}]}], ",", " ", 
       RowBox[{"H2T0MPSpeed", " ", "+", " ", 
        RowBox[{"H2T0MPSpeed", " ", "*", " ", "0.01"}]}]}], "}"}]}], "]"}], 
   " ", "*", " ", "100"}]}]], "Input",
 CellChangeTimes->{{3.768468147943124*^9, 3.768468329615999*^9}, {
  3.768470995634276*^9, 
  3.7684710046413517`*^9}},ExpressionUUID->"5c35d196-cab6-4c4a-b678-\
1e7c7686b9a4"],

Cell[BoxData["1.660319299330909`"], "Output",
 CellChangeTimes->{{3.7684683253660717`*^9, 3.768468330075817*^9}},
 CellLabel->
  "Out[392]=",ExpressionUUID->"04811c46-a90f-4f03-8c7b-3eba7f6e2897"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Calculating", " ", "percintage", " ", "of", " ", "moleculas", " ", 
     "with", " ", "speeds", " ", "v_most", "_prob"}], " ", "\[PlusMinus]", 
    " ", 
    RowBox[{"v_most", "_prob", " ", "*", " ", "5", "%"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"FMaxwellDistAbs", "[", 
      RowBox[{"H2m", ",", " ", "v", ",", " ", "T0"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"v", ",", " ", 
       RowBox[{"H2T0MPSpeed", " ", "-", " ", 
        RowBox[{"H2T0MPSpeed", " ", "*", " ", "0.01"}]}], ",", " ", 
       RowBox[{"H2T0MPSpeed", " ", "+", " ", 
        RowBox[{"H2T0MPSpeed", " ", "*", " ", "0.05"}]}]}], "}"}]}], "]"}], 
   " ", "*", " ", "100"}]}]], "Input",
 CellChangeTimes->{{3.768468338331806*^9, 3.768468340714747*^9}, {
  3.7684709870526733`*^9, 
  3.768471010892453*^9}},ExpressionUUID->"ee0c0792-42ec-4dc7-84d5-\
141a06eaa6b7"],

Cell[BoxData["4.974410085509845`"], "Output",
 CellChangeTimes->{3.768468340979066*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"3b5df36a-0f72-4c45-bb77-fd6a99f625e5"]
}, Open  ]]
},
WindowSize->{1920, 1017},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4815, 119, 538, "Input",ExpressionUUID->"1106008a-c937-4e14-9c18-33acc57e2346"],
Cell[CellGroupData[{
Cell[5398, 143, 4286, 100, 722, "Input",ExpressionUUID->"6706fbca-ca65-4397-b0dd-2d7a449c89c2"],
Cell[9687, 245, 58127, 1032, 241, "Output",ExpressionUUID->"f388b7ac-7a4d-4f64-8574-3ab70febcc10"],
Cell[67817, 1279, 56350, 1003, 237, "Output",ExpressionUUID->"25ca1f7f-0b85-41d9-818a-d430eb17a7f0"],
Cell[124170, 2284, 55551, 990, 237, "Output",ExpressionUUID->"bc779855-65f4-4691-a052-97859347a032"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179758, 3279, 4210, 101, 699, "Input",ExpressionUUID->"7e4cbc7f-0fab-4b50-bb59-8cdf94673f79"],
Cell[183971, 3382, 68564, 1203, 255, "Output",ExpressionUUID->"27238dcc-4e41-47a4-ba7c-fbac7ee48392"],
Cell[252538, 4587, 69676, 1221, 255, "Output",ExpressionUUID->"e81659ae-46c7-43d5-a504-bfa9a72c1dfb"],
Cell[322217, 5810, 69556, 1219, 255, "Output",ExpressionUUID->"2cb125be-9936-41a2-ae95-6570623bb461"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391810, 7034, 787, 18, 101, "Input",ExpressionUUID->"21b0b6a4-721d-4db4-87f0-3c9f46b2828f"],
Cell[392600, 7054, 219, 4, 35, "Output",ExpressionUUID->"bb577b3a-1434-4be5-a589-585d1996304f"],
Cell[392822, 7060, 220, 4, 35, "Output",ExpressionUUID->"1428cfc7-8371-44c4-be47-e50254e74aea"],
Cell[393045, 7066, 220, 4, 35, "Output",ExpressionUUID->"1af08829-fd73-4cd0-b404-87bf56c801e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393302, 7075, 785, 18, 101, "Input",ExpressionUUID->"f23fd499-29c3-4a3a-bcbc-4577fb0ecb9b"],
Cell[394090, 7095, 222, 4, 35, "Output",ExpressionUUID->"a3b9736c-ba84-49a5-9172-cc8b48b347ae"],
Cell[394315, 7101, 222, 4, 35, "Output",ExpressionUUID->"5dc9e5e6-1c12-45a3-abca-b14564283b77"],
Cell[394540, 7107, 220, 4, 35, "Output",ExpressionUUID->"e504f0b1-015e-4000-9760-4cb8549bd7c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394797, 7116, 1104, 26, 78, "Input",ExpressionUUID->"32ac5cdc-73e5-4339-af4b-1ea53d9c4420"],
Cell[395904, 7144, 247, 4, 35, "Output",ExpressionUUID->"c615de25-9124-48c8-a85e-f3394cca1e1b"],
Cell[396154, 7150, 247, 4, 35, "Output",ExpressionUUID->"8c61cef6-fb34-4df1-bfae-871d0069a034"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396438, 7159, 924, 23, 55, "Input",ExpressionUUID->"a86ca72f-1e7d-4c7f-b3c6-2a87fb0256f1"],
Cell[397365, 7184, 273, 4, 35, "Output",ExpressionUUID->"a3c150bf-9d71-47d1-aab7-507a64322835"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397675, 7193, 996, 25, 55, "Input",ExpressionUUID->"5c35d196-cab6-4c4a-b678-1e7c7686b9a4"],
Cell[398674, 7220, 196, 3, 35, "Output",ExpressionUUID->"04811c46-a90f-4f03-8c7b-3eba7f6e2897"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398907, 7228, 996, 25, 55, "Input",ExpressionUUID->"ee0c0792-42ec-4dc7-84d5-141a06eaa6b7"],
Cell[399906, 7255, 170, 3, 35, "Output",ExpressionUUID->"3b5df36a-0f72-4c45-bb77-fd6a99f625e5"]
}, Open  ]]
}
]
*)

